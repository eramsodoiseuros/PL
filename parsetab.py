
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BIGEQUAL CALL COMMENT DEFINE DO ELSE EQUALS FALSE FUNC ID IF IFELSE INT LESSEREQUAL NOTEQUALS NUM OR PAL STDIN STDOUT TRUE WHILEPrograma : BlocosCodigoBlocosCodigo  :  Codigo BlocosCodigo  :  BlocosCodigo Codigo Codigo  :  Declaracao Declaracao :  INT ID ';' Declaracao :  INT ID '=' Expressao ';'Declaracao :  INT BlocoLerSTDIN Codigo  : Atribuicao   Atribuicao : ID '=' Expressao ';'  Atribuicao : ID '=' Bloco_CALLFUNC  Expressao : Var  Var : NUM  Var : ID  Var : TRUE  Var : FALSE  Expressao : Expressao Operador Var  Expressao : '(' Expressao  ')'  Operador : '+'  Operador : '-'  Operador : '*'  Operador : '/'  Operador : '%' Codigo  : BlocoIF BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}'  BlocoIF : IFELSE '(' ListaCondicionais ')' '{' BlocosCodigo '}' ELSE '{' BlocosCodigo '}' ListaCondicionais : Condicional ListaCondicionais : '(' ListaCondicionais ')' ListaCondicionais : '!' '(' ListaCondicionais ')' ListaCondicionais : ListaCondicionais OperadorLogico CondicionalOperadorLogico : ANDOperadorLogico : ORCondicional : VarCondicional : '!' '(' Condicional ')'Condicional : '(' Condicional ')'Condicional : Condicional OperadorCondicional CondicionalOperadorCondicional : '>'OperadorCondicional : BIGEQUAL OperadorCondicional : '<'OperadorCondicional : LESSEREQUALOperadorCondicional : EQUALSOperadorCondicional : NOTEQUALSCodigo  : BlocoWhileDo BlocoWhileDo : WHILE  '(' ListaCondicionais ')' DO '{' BlocosCodigo '}'  Codigo  : BlocoLerSTDIN BlocoLerSTDIN : ID '=' STDIN '(' ')' ';' Codigo  : Bloco_EscreverSTDOUT Bloco_EscreverSTDOUT : STDOUT '(' Var ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' PAL ')' ';' Codigo  : Bloco_Comentario Bloco_Comentario : COMMENT Codigo  : Bloco_DEFINEFUNC Bloco_DEFINEFUNC : DEFINE FUNC '(' ')' '{' BlocosCodigo '}' Bloco_DEFINEFUNC : DEFINE FUNC '(' ListaAtributos  ')' '{' BlocosCodigo '}' ListaAtributos : Atributo ListaAtributos : ListaAtributos ',' Atributo Atributo : INTCodigo  : Bloco_CALLFUNC Bloco_CALLFUNC : CALL FUNC '(' ')' ';' Bloco_CALLFUNC : CALL FUNC '(' INPUTVar  ')' ';'  INPUTVar : Var  INPUTVar : INPUTVar ',' Var "
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,52,55,89,95,102,104,105,106,108,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[13,13,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,85,-9,-6,13,13,-47,-48,13,85,-58,-45,13,13,13,13,13,-59,-24,13,-52,13,-43,-53,13,13,-25,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,22,24,25,26,27,28,29,32,33,36,38,43,53,55,56,57,58,59,60,61,67,68,69,70,71,72,73,74,75,76,77,89,95,98,102,104,105,106,109,111,112,113,114,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[14,14,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,23,-50,-3,-7,34,34,34,34,34,-5,34,-10,34,34,34,-9,34,-18,-19,-20,-21,-22,34,-30,-31,34,-36,-37,-38,-39,-40,-41,34,-6,14,34,14,-47,-48,14,-58,34,-45,14,34,14,14,14,14,-59,-24,14,-52,14,-43,-53,14,14,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[15,15,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,15,15,-47,-48,15,-58,-45,15,15,15,15,15,-59,-24,15,-52,15,-43,-53,15,15,-25,]),'IFELSE':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[16,16,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,16,16,-47,-48,16,-58,-45,16,16,16,16,16,-59,-24,16,-52,16,-43,-53,16,16,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[17,17,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,17,17,-47,-48,17,-58,-45,17,17,17,17,17,-59,-24,17,-52,17,-43,-53,17,17,-25,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[18,18,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,18,18,-47,-48,18,-58,-45,18,18,18,18,18,-59,-24,18,-52,18,-43,-53,18,18,-25,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[19,19,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,19,19,-47,-48,19,-58,-45,19,19,19,19,19,-59,-24,19,-52,19,-43,-53,19,19,-25,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[20,20,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,20,20,-47,-48,20,-58,-45,20,20,20,20,20,-59,-24,20,-52,20,-43,-53,20,20,-25,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,24,25,32,36,55,89,95,102,104,105,106,109,112,113,118,119,120,121,123,125,128,129,130,132,133,134,135,136,],[21,21,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,21,-5,-10,-9,-6,21,21,-47,-48,21,-58,-45,21,21,21,21,21,-59,-24,21,-52,21,-43,-53,21,21,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,104,105,109,112,123,125,129,132,133,136,],[0,-1,-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,-47,-48,-58,-45,-59,-24,-52,-43,-53,-25,]),'}':([3,4,5,6,7,8,9,10,11,12,19,22,24,32,36,55,89,104,105,109,112,113,118,120,123,125,128,129,130,132,133,135,136,],[-2,-4,-8,-23,-42,-44,-46,-49,-51,-57,-50,-3,-7,-5,-10,-9,-6,-47,-48,-58,-45,125,127,129,-59,-24,132,-52,133,-43,-53,136,-25,]),'=':([14,23,],[25,33,]),'(':([15,16,17,18,25,26,27,28,30,31,33,37,38,43,46,67,68,69,70,71,72,73,74,75,76,77,97,98,114,],[26,27,28,29,38,43,43,43,52,53,38,62,38,43,77,98,-30,-31,98,-36,-37,-38,-39,-40,-41,43,114,98,98,]),'FUNC':([20,21,],[30,31,]),';':([23,34,35,39,40,41,42,54,80,81,86,90,91,92,110,],[32,-13,55,-11,-12,-14,-15,89,104,105,109,-16,112,-17,123,]),'STDIN':([25,33,],[37,37,]),'NUM':([25,26,27,28,29,33,38,43,53,56,57,58,59,60,61,67,68,69,70,71,72,73,74,75,76,77,98,111,114,],[40,40,40,40,40,40,40,40,40,40,-18,-19,-20,-21,-22,40,-30,-31,40,-36,-37,-38,-39,-40,-41,40,40,40,40,]),'TRUE':([25,26,27,28,29,33,38,43,53,56,57,58,59,60,61,67,68,69,70,71,72,73,74,75,76,77,98,111,114,],[41,41,41,41,41,41,41,41,41,41,-18,-19,-20,-21,-22,41,-30,-31,41,-36,-37,-38,-39,-40,-41,41,41,41,41,]),'FALSE':([25,26,27,28,29,33,38,43,53,56,57,58,59,60,61,67,68,69,70,71,72,73,74,75,76,77,98,111,114,],[42,42,42,42,42,42,42,42,42,42,-18,-19,-20,-21,-22,42,-30,-31,42,-36,-37,-38,-39,-40,-41,42,42,42,42,]),'!':([26,27,28,43,67,68,69,70,71,72,73,74,75,76,77,98,114,],[46,46,46,46,97,-30,-31,97,-36,-37,-38,-39,-40,-41,46,97,97,]),'PAL':([29,],[51,]),'+':([34,35,39,40,41,42,54,63,90,92,],[-13,57,-11,-12,-14,-15,57,57,-16,-17,]),'-':([34,35,39,40,41,42,54,63,90,92,],[-13,58,-11,-12,-14,-15,58,58,-16,-17,]),'*':([34,35,39,40,41,42,54,63,90,92,],[-13,59,-11,-12,-14,-15,59,59,-16,-17,]),'/':([34,35,39,40,41,42,54,63,90,92,],[-13,60,-11,-12,-14,-15,60,60,-16,-17,]),'%':([34,35,39,40,41,42,54,63,90,92,],[-13,61,-11,-12,-14,-15,61,61,-16,-17,]),'>':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,71,-32,71,-34,71,71,71,71,-33,71,]),'BIGEQUAL':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,72,-32,72,-34,72,72,72,72,-33,72,]),'<':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,73,-32,73,-34,73,73,73,73,-33,73,]),'LESSEREQUAL':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,74,-32,74,-34,74,74,74,74,-33,74,]),'EQUALS':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,75,-32,75,-34,75,75,75,75,-33,75,]),'NOTEQUALS':([34,40,41,42,45,47,65,94,96,99,101,115,117,126,],[-13,-12,-14,-15,76,-32,76,-34,76,76,76,76,-33,76,]),')':([34,39,40,41,42,44,45,47,48,49,50,51,52,53,62,63,64,65,83,84,85,87,88,90,92,93,94,96,99,100,101,115,116,117,122,124,126,],[-13,-11,-12,-14,-15,66,-26,-32,78,79,80,81,82,86,91,92,93,94,107,-54,-56,110,-60,-16,-17,-27,-34,-29,-35,116,117,94,-28,-33,-55,-61,117,]),'AND':([34,40,41,42,44,45,47,48,49,64,65,93,94,96,99,100,101,116,117,],[-13,-12,-14,-15,68,-26,-32,68,68,68,-26,-27,-34,-29,-35,68,-26,-28,-33,]),'OR':([34,40,41,42,44,45,47,48,49,64,65,93,94,96,99,100,101,116,117,],[-13,-12,-14,-15,69,-26,-32,69,69,69,-26,-27,-34,-29,-35,69,-26,-28,-33,]),',':([34,40,41,42,83,84,85,87,88,122,124,],[-13,-12,-14,-15,108,-54,-56,111,-60,-55,-61,]),'{':([66,78,82,103,107,131,],[95,102,106,119,121,134,]),'DO':([79,],[103,]),'ELSE':([127,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocosCodigo':([0,95,102,106,119,121,134,],[2,113,118,120,128,130,135,]),'Codigo':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[3,22,3,3,3,22,22,3,22,3,22,22,3,22,]),'Declaracao':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Atribuicao':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'BlocoIF':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BlocoWhileDo':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BlocoLerSTDIN':([0,2,13,95,102,106,113,118,119,120,121,128,130,134,135,],[8,8,24,8,8,8,8,8,8,8,8,8,8,8,8,]),'Bloco_EscreverSTDOUT':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Bloco_Comentario':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Bloco_DEFINEFUNC':([0,2,95,102,106,113,118,119,120,121,128,130,134,135,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Bloco_CALLFUNC':([0,2,25,95,102,106,113,118,119,120,121,128,130,134,135,],[12,12,36,12,12,12,12,12,12,12,12,12,12,12,12,]),'Expressao':([25,33,38,],[35,54,63,]),'Var':([25,26,27,28,29,33,38,43,53,56,67,70,77,98,111,114,],[39,47,47,47,50,39,39,47,88,90,47,47,47,47,124,47,]),'ListaCondicionais':([26,27,28,43,77,],[44,48,49,64,100,]),'Condicional':([26,27,28,43,67,70,77,98,114,],[45,45,45,65,96,99,101,115,126,]),'Operador':([35,54,63,],[56,56,56,]),'OperadorLogico':([44,48,49,64,100,],[67,67,67,67,67,]),'OperadorCondicional':([45,65,96,99,101,115,126,],[70,70,70,70,70,70,70,]),'ListaAtributos':([52,],[83,]),'Atributo':([52,108,],[84,122,]),'INPUTVar':([53,],[87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocosCodigo','Programa',1,'p_Programa','PLTP2-lex-yacc-V05.py',24),
  ('BlocosCodigo -> Codigo','BlocosCodigo',1,'p_BlocoCodigo_fin','PLTP2-lex-yacc-V05.py',32),
  ('BlocosCodigo -> BlocosCodigo Codigo','BlocosCodigo',2,'p_BlocosCodigo_Rec','PLTP2-lex-yacc-V05.py',37),
  ('Codigo -> Declaracao','Codigo',1,'p_Codigo_Declaracao','PLTP2-lex-yacc-V05.py',46),
  ('Declaracao -> INT ID ;','Declaracao',3,'p_Declaracao','PLTP2-lex-yacc-V05.py',51),
  ('Declaracao -> INT ID = Expressao ;','Declaracao',5,'p_Declaracao_Atribuicao','PLTP2-lex-yacc-V05.py',57),
  ('Declaracao -> INT BlocoLerSTDIN','Declaracao',2,'p_Declaracao_STDIN','PLTP2-lex-yacc-V05.py',63),
  ('Codigo -> Atribuicao','Codigo',1,'p_Codigo_Atribuicao','PLTP2-lex-yacc-V05.py',71),
  ('Atribuicao -> ID = Expressao ;','Atribuicao',4,'p_Atribuicao','PLTP2-lex-yacc-V05.py',76),
  ('Atribuicao -> ID = Bloco_CALLFUNC','Atribuicao',3,'p_Atribuicao_FUNC','PLTP2-lex-yacc-V05.py',84),
  ('Expressao -> Var','Expressao',1,'p_Expressao_fin','PLTP2-lex-yacc-V05.py',94),
  ('Var -> NUM','Var',1,'p_Var_NUM','PLTP2-lex-yacc-V05.py',99),
  ('Var -> ID','Var',1,'p_Var_ID','PLTP2-lex-yacc-V05.py',105),
  ('Var -> TRUE','Var',1,'p_Var_TRUE','PLTP2-lex-yacc-V05.py',110),
  ('Var -> FALSE','Var',1,'p_Var_FALSE','PLTP2-lex-yacc-V05.py',115),
  ('Expressao -> Expressao Operador Var','Expressao',3,'p_Expressao_Rec1','PLTP2-lex-yacc-V05.py',123),
  ('Expressao -> ( Expressao )','Expressao',3,'p_Expressao_Rec2','PLTP2-lex-yacc-V05.py',128),
  ('Operador -> +','Operador',1,'p_Operador_MAIS','PLTP2-lex-yacc-V05.py',135),
  ('Operador -> -','Operador',1,'p_Operador_Minus','PLTP2-lex-yacc-V05.py',139),
  ('Operador -> *','Operador',1,'p_Operador_MUL','PLTP2-lex-yacc-V05.py',142),
  ('Operador -> /','Operador',1,'p_Operador_Div','PLTP2-lex-yacc-V05.py',145),
  ('Operador -> %','Operador',1,'p_Operador_Rest','PLTP2-lex-yacc-V05.py',148),
  ('Codigo -> BlocoIF','Codigo',1,'p_Codigo_BlocoIF','PLTP2-lex-yacc-V05.py',156),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }','BlocoIF',7,'p_BlocoIF','PLTP2-lex-yacc-V05.py',163),
  ('BlocoIF -> IFELSE ( ListaCondicionais ) { BlocosCodigo } ELSE { BlocosCodigo }','BlocoIF',11,'p_BlocoIF_ELSE','PLTP2-lex-yacc-V05.py',168),
  ('ListaCondicionais -> Condicional','ListaCondicionais',1,'p_ListaCondicionais_fin','PLTP2-lex-yacc-V05.py',174),
  ('ListaCondicionais -> ( ListaCondicionais )','ListaCondicionais',3,'p_ListaCondicionais_Capsulado','PLTP2-lex-yacc-V05.py',179),
  ('ListaCondicionais -> ! ( ListaCondicionais )','ListaCondicionais',4,'p_ListaCondicionais_Neg','PLTP2-lex-yacc-V05.py',184),
  ('ListaCondicionais -> ListaCondicionais OperadorLogico Condicional','ListaCondicionais',3,'p_ListaCondicionais_Rec','PLTP2-lex-yacc-V05.py',189),
  ('OperadorLogico -> AND','OperadorLogico',1,'p_OperadorLogico_AND','PLTP2-lex-yacc-V05.py',198),
  ('OperadorLogico -> OR','OperadorLogico',1,'p_OperadorLogico_OR','PLTP2-lex-yacc-V05.py',203),
  ('Condicional -> Var','Condicional',1,'p_Condicional_Var','PLTP2-lex-yacc-V05.py',211),
  ('Condicional -> ! ( Condicional )','Condicional',4,'p_Condicional_Neg','PLTP2-lex-yacc-V05.py',215),
  ('Condicional -> ( Condicional )','Condicional',3,'p_Condicional_Capsulado','PLTP2-lex-yacc-V05.py',221),
  ('Condicional -> Condicional OperadorCondicional Condicional','Condicional',3,'p_Condicional_OperadorCondicional','PLTP2-lex-yacc-V05.py',225),
  ('OperadorCondicional -> >','OperadorCondicional',1,'p_OperadorCondicional_Maior','PLTP2-lex-yacc-V05.py',234),
  ('OperadorCondicional -> BIGEQUAL','OperadorCondicional',1,'p_OperadorCondicional_BIGEQUAL','PLTP2-lex-yacc-V05.py',238),
  ('OperadorCondicional -> <','OperadorCondicional',1,'p_OperadorCondicional_MENOR','PLTP2-lex-yacc-V05.py',242),
  ('OperadorCondicional -> LESSEREQUAL','OperadorCondicional',1,'p_OperadorCondicional_LESSEREQUAL','PLTP2-lex-yacc-V05.py',246),
  ('OperadorCondicional -> EQUALS','OperadorCondicional',1,'p_OperadorCondicional_EQUALS','PLTP2-lex-yacc-V05.py',250),
  ('OperadorCondicional -> NOTEQUALS','OperadorCondicional',1,'p_OperadorCondicional_NOTEQUALS','PLTP2-lex-yacc-V05.py',255),
  ('Codigo -> BlocoWhileDo','Codigo',1,'p_Codigo_BlocoWhileDo','PLTP2-lex-yacc-V05.py',262),
  ('BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }','BlocoWhileDo',8,'p_BlocoWhileDo','PLTP2-lex-yacc-V05.py',267),
  ('Codigo -> BlocoLerSTDIN','Codigo',1,'p_Codigo_LerSTDIN','PLTP2-lex-yacc-V05.py',273),
  ('BlocoLerSTDIN -> ID = STDIN ( ) ;','BlocoLerSTDIN',6,'p_BlocoLerSTDIN','PLTP2-lex-yacc-V05.py',278),
  ('Codigo -> Bloco_EscreverSTDOUT','Codigo',1,'p_Codigo_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',285),
  ('Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',289),
  ('Bloco_EscreverSTDOUT -> STDOUT ( PAL ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT_PAL','PLTP2-lex-yacc-V05.py',296),
  ('Codigo -> Bloco_Comentario','Codigo',1,'p_Codigo_Comentario','PLTP2-lex-yacc-V05.py',304),
  ('Bloco_Comentario -> COMMENT','Bloco_Comentario',1,'p_Bloco_Comentario','PLTP2-lex-yacc-V05.py',309),
  ('Codigo -> Bloco_DEFINEFUNC','Codigo',1,'p_Codigo_DEFINEFUNC','PLTP2-lex-yacc-V05.py',318),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }','Bloco_DEFINEFUNC',7,'p_Bloco_DEFINEFUNC_EMPTY','PLTP2-lex-yacc-V05.py',323),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }','Bloco_DEFINEFUNC',8,'p_Bloco_DEFINEFUNC_Atributos','PLTP2-lex-yacc-V05.py',329),
  ('ListaAtributos -> Atributo','ListaAtributos',1,'p_ListaAtributos_fin','PLTP2-lex-yacc-V05.py',335),
  ('ListaAtributos -> ListaAtributos , Atributo','ListaAtributos',3,'p_ListaAtributos_Rec','PLTP2-lex-yacc-V05.py',341),
  ('Atributo -> INT','Atributo',1,'p_Atributo','PLTP2-lex-yacc-V05.py',348),
  ('Codigo -> Bloco_CALLFUNC','Codigo',1,'p_Codigo_CALLFUNC','PLTP2-lex-yacc-V05.py',356),
  ('Bloco_CALLFUNC -> CALL FUNC ( ) ;','Bloco_CALLFUNC',5,'p_Bloco_CALLFUNC_EMPTY','PLTP2-lex-yacc-V05.py',361),
  ('Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;','Bloco_CALLFUNC',6,'p_Bloco_CALLFUNC_Atributos','PLTP2-lex-yacc-V05.py',367),
  ('INPUTVar -> Var','INPUTVar',1,'p_INPUTVar_fin','PLTP2-lex-yacc-V05.py',372),
  ('INPUTVar -> INPUTVar , Var','INPUTVar',3,'p_INPUTVar_Rec','PLTP2-lex-yacc-V05.py',377),
]
