
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BIGEQUAL CALL COMMENT DEFINE DO ELSE EQUALS FALSE FUNC ID IF INT LESSEREQUAL NOTEQUALS NUM OR STDIN STDOUT TRUE WHILEPrograma : BlocosCodigoBlocosCodigo  :  Codigo BlocosCodigo  :  BlocosCodigo Codigo Codigo  :  Declaracao Declaracao :  INT ID ';' Declaracao :  INT ID '=' Expressao Declaracao :  INT BlocoLerSTDIN Codigo  : Atribuicao   Atribuicao : ID '=' Expressao ';'  Atribuicao : ID '=' Bloco_CALLFUNC  Expressao : Var  Var : NUM  Var : ID  Var : TRUE  Var : FALSE  Expressao : Expressao Operador Var  Expressao : '(' Expressao  ')'  Operador : '+'  Operador : '-'  Operador : '*'  Operador : '/'  Operador : '%' Codigo  : BlocoIF BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}'  BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}' ELSE '{' BlocosCodigo '}' ListaCondicionais : Condicional ListaCondicionais : '(' ListaCondicionais ')' ListaCondicionais : '!' '(' ListaCondicionais ')' ListaCondicionais : ListaCondicionais OperadorLogico CondicionalOperadorLogico : ANDOperadorLogico : ORCondicional : VarCondicional : '!' '(' Condicional ')'Condicional : '(' Condicional ')'Condicional : Condicional OperadorCondicional CondicionalOperadorCondicional : '>'OperadorCondicional : BIGEQUAL OperadorCondicional : '<'OperadorCondicional : LESSEREQUALOperadorCondicional : EQUALSOperadorCondicional : NOTEQUALSCodigo  : BlocoWhileDo BlocoWhileDo : WHILE  '(' ListaCondicionais ')' DO '{' BlocosCodigo '}'  Codigo  : BlocoLerSTDIN BlocoLerSTDIN : ID '=' STDIN '(' ')' ';' Codigo  : Bloco_EscreverSTDOUT Bloco_EscreverSTDOUT : STDOUT '(' Var ')' ';' Codigo  : Bloco_Comentario Bloco_Comentario : COMMENT Codigo  : Bloco_DEFINEFUNC Bloco_DEFINEFUNC : DEFINE FUNC '(' ')' '{' BlocosCodigo '}' Bloco_DEFINEFUNC : DEFINE FUNC '(' ListaAtributos  ')' '{' BlocosCodigo '}' ListaAtributos : Atributo ListaAtributos : ListaAtributos ',' Atributo Atributo : INTCodigo  : Bloco_CALLFUNC Bloco_CALLFUNC : CALL FUNC '(' ')' ';' Bloco_CALLFUNC : CALL FUNC '(' INPUTVar  ')' ';'  INPUTVar : Var  INPUTVar : INPUTVar ',' Var "
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,48,50,51,83,85,88,96,97,99,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[13,13,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,79,-6,-9,-16,-17,13,-47,13,79,-57,-45,13,13,13,13,-58,-24,13,-51,13,-43,-52,13,13,-25,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,18,21,23,24,25,26,27,30,31,32,34,36,37,38,39,40,41,49,50,51,52,53,54,55,56,57,63,64,65,66,67,68,69,70,71,72,73,83,85,88,91,96,97,100,102,103,104,105,109,110,111,113,115,117,118,119,121,122,123,124,125,],[14,14,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,22,-49,-3,-7,32,32,32,32,-5,32,-13,-10,32,-11,-12,-14,-15,32,32,-6,-9,32,-18,-19,-20,-21,-22,32,-30,-31,32,-36,-37,-38,-39,-40,-41,32,-16,-17,14,32,-47,14,-57,32,-45,14,32,14,14,14,-58,-24,14,-51,14,-43,-52,14,14,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[15,15,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,15,-47,15,-57,-45,15,15,15,15,-58,-24,15,-51,15,-43,-52,15,15,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[16,16,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,16,-47,16,-57,-45,16,16,16,16,-58,-24,16,-51,16,-43,-52,16,16,-25,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[17,17,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,17,-47,17,-57,-45,17,17,17,17,-58,-24,17,-51,17,-43,-52,17,17,-25,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[18,18,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,18,-47,18,-57,-45,18,18,18,18,-58,-24,18,-51,18,-43,-52,18,18,-25,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[19,19,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,19,-47,19,-57,-45,19,19,19,19,-58,-24,19,-51,19,-43,-52,19,19,-25,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,18,21,23,24,30,32,34,37,38,39,40,50,51,83,85,88,96,97,100,103,104,109,110,111,113,115,117,118,119,121,122,123,124,125,],[20,20,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,20,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,20,-47,20,-57,-45,20,20,20,20,-58,-24,20,-51,20,-43,-52,20,20,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,96,100,103,113,115,118,121,122,125,],[0,-1,-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,-47,-57,-45,-58,-24,-51,-43,-52,-25,]),'}':([3,4,5,6,7,8,9,10,11,12,18,21,23,30,32,34,37,38,39,40,50,51,83,85,96,100,103,104,110,113,115,117,118,119,121,122,124,125,],[-2,-4,-8,-23,-42,-44,-46,-48,-50,-56,-49,-3,-7,-5,-13,-10,-11,-12,-14,-15,-6,-9,-16,-17,-47,-57,-45,115,118,-58,-24,121,-51,122,-43,-52,125,-25,]),'=':([14,22,],[24,31,]),'(':([15,16,17,24,25,26,28,29,31,35,36,41,44,63,64,65,66,67,68,69,70,71,72,73,90,91,105,],[25,26,27,36,41,41,48,49,36,58,36,41,73,91,-30,-31,91,-36,-37,-38,-39,-40,-41,41,105,91,91,]),'FUNC':([19,20,],[28,29,]),';':([22,32,33,37,38,39,40,75,80,83,84,85,101,],[30,-13,51,-11,-12,-14,-15,96,100,-16,103,-17,113,]),'STDIN':([24,31,],[35,35,]),'NUM':([24,25,26,27,31,36,41,49,52,53,54,55,56,57,63,64,65,66,67,68,69,70,71,72,73,91,102,105,],[38,38,38,38,38,38,38,38,38,-18,-19,-20,-21,-22,38,-30,-31,38,-36,-37,-38,-39,-40,-41,38,38,38,38,]),'TRUE':([24,25,26,27,31,36,41,49,52,53,54,55,56,57,63,64,65,66,67,68,69,70,71,72,73,91,102,105,],[39,39,39,39,39,39,39,39,39,-18,-19,-20,-21,-22,39,-30,-31,39,-36,-37,-38,-39,-40,-41,39,39,39,39,]),'FALSE':([24,25,26,27,31,36,41,49,52,53,54,55,56,57,63,64,65,66,67,68,69,70,71,72,73,91,102,105,],[40,40,40,40,40,40,40,40,40,-18,-19,-20,-21,-22,40,-30,-31,40,-36,-37,-38,-39,-40,-41,40,40,40,40,]),'!':([25,26,41,63,64,65,66,67,68,69,70,71,72,73,91,105,],[44,44,44,90,-30,-31,90,-36,-37,-38,-39,-40,-41,44,90,90,]),'+':([32,33,37,38,39,40,50,59,83,85,],[-13,53,-11,-12,-14,-15,53,53,-16,-17,]),'-':([32,33,37,38,39,40,50,59,83,85,],[-13,54,-11,-12,-14,-15,54,54,-16,-17,]),'*':([32,33,37,38,39,40,50,59,83,85,],[-13,55,-11,-12,-14,-15,55,55,-16,-17,]),'/':([32,33,37,38,39,40,50,59,83,85,],[-13,56,-11,-12,-14,-15,56,56,-16,-17,]),'%':([32,33,37,38,39,40,50,59,83,85,],[-13,57,-11,-12,-14,-15,57,57,-16,-17,]),'>':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,67,-32,67,-34,67,67,67,67,-33,67,]),'BIGEQUAL':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,68,-32,68,-34,68,68,68,68,-33,68,]),'<':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,69,-32,69,-34,69,69,69,69,-33,69,]),'LESSEREQUAL':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,70,-32,70,-34,70,70,70,70,-33,70,]),'EQUALS':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,71,-32,71,-34,71,71,71,71,-33,71,]),'NOTEQUALS':([32,38,39,40,43,45,61,87,89,92,94,106,108,116,],[-13,-12,-14,-15,72,-32,72,-34,72,72,72,72,-33,72,]),')':([32,37,38,39,40,42,43,45,46,47,48,49,58,59,60,61,77,78,79,81,82,83,85,86,87,89,92,93,94,106,107,108,112,114,116,],[-13,-11,-12,-14,-15,62,-26,-32,74,75,76,80,84,85,86,87,98,-53,-55,101,-59,-16,-17,-27,-34,-29,-35,107,108,87,-28,-33,-54,-60,108,]),'AND':([32,38,39,40,42,43,45,46,60,61,86,87,89,92,93,94,107,108,],[-13,-12,-14,-15,64,-26,-32,64,64,-26,-27,-34,-29,-35,64,-26,-28,-33,]),'OR':([32,38,39,40,42,43,45,46,60,61,86,87,89,92,93,94,107,108,],[-13,-12,-14,-15,65,-26,-32,65,65,-26,-27,-34,-29,-35,65,-26,-28,-33,]),',':([32,38,39,40,77,78,79,81,82,112,114,],[-13,-12,-14,-15,99,-53,-55,102,-59,-54,-60,]),'{':([62,76,95,98,120,],[88,97,109,111,123,]),'DO':([74,],[95,]),'ELSE':([115,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocosCodigo':([0,88,97,109,111,123,],[2,104,110,117,119,124,]),'Codigo':([0,2,88,97,104,109,110,111,117,119,123,124,],[3,21,3,3,21,3,21,3,21,21,3,21,]),'Declaracao':([0,2,88,97,104,109,110,111,117,119,123,124,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'Atribuicao':([0,2,88,97,104,109,110,111,117,119,123,124,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'BlocoIF':([0,2,88,97,104,109,110,111,117,119,123,124,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'BlocoWhileDo':([0,2,88,97,104,109,110,111,117,119,123,124,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'BlocoLerSTDIN':([0,2,13,88,97,104,109,110,111,117,119,123,124,],[8,8,23,8,8,8,8,8,8,8,8,8,8,]),'Bloco_EscreverSTDOUT':([0,2,88,97,104,109,110,111,117,119,123,124,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'Bloco_Comentario':([0,2,88,97,104,109,110,111,117,119,123,124,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'Bloco_DEFINEFUNC':([0,2,88,97,104,109,110,111,117,119,123,124,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Bloco_CALLFUNC':([0,2,24,88,97,104,109,110,111,117,119,123,124,],[12,12,34,12,12,12,12,12,12,12,12,12,12,]),'Expressao':([24,31,36,],[33,50,59,]),'Var':([24,25,26,27,31,36,41,49,52,63,66,73,91,102,105,],[37,45,45,47,37,37,45,82,83,45,45,45,45,114,45,]),'ListaCondicionais':([25,26,41,73,],[42,46,60,93,]),'Condicional':([25,26,41,63,66,73,91,105,],[43,43,61,89,92,94,106,116,]),'Operador':([33,50,59,],[52,52,52,]),'OperadorLogico':([42,46,60,93,],[63,63,63,63,]),'OperadorCondicional':([43,61,89,92,94,106,116,],[66,66,66,66,66,66,66,]),'ListaAtributos':([48,],[77,]),'Atributo':([48,99,],[78,112,]),'INPUTVar':([49,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocosCodigo','Programa',1,'p_Programa','PLTP2-lex-yacc-V05.py',43),
  ('BlocosCodigo -> Codigo','BlocosCodigo',1,'p_BlocoCodigo_fin','PLTP2-lex-yacc-V05.py',51),
  ('BlocosCodigo -> BlocosCodigo Codigo','BlocosCodigo',2,'p_BlocosCodigo_Rec','PLTP2-lex-yacc-V05.py',56),
  ('Codigo -> Declaracao','Codigo',1,'p_Codigo_Declaracao','PLTP2-lex-yacc-V05.py',65),
  ('Declaracao -> INT ID ;','Declaracao',3,'p_Declaracao','PLTP2-lex-yacc-V05.py',70),
  ('Declaracao -> INT ID = Expressao','Declaracao',4,'p_Declaracao_Atribuicao','PLTP2-lex-yacc-V05.py',76),
  ('Declaracao -> INT BlocoLerSTDIN','Declaracao',2,'p_Declaracao_STDIN','PLTP2-lex-yacc-V05.py',82),
  ('Codigo -> Atribuicao','Codigo',1,'p_Codigo_Atribuicao','PLTP2-lex-yacc-V05.py',90),
  ('Atribuicao -> ID = Expressao ;','Atribuicao',4,'p_Atribuicao','PLTP2-lex-yacc-V05.py',95),
  ('Atribuicao -> ID = Bloco_CALLFUNC','Atribuicao',3,'p_Atribuicao_FUNC','PLTP2-lex-yacc-V05.py',103),
  ('Expressao -> Var','Expressao',1,'p_Expressao_fin','PLTP2-lex-yacc-V05.py',113),
  ('Var -> NUM','Var',1,'p_Var_NUM','PLTP2-lex-yacc-V05.py',118),
  ('Var -> ID','Var',1,'p_Var_ID','PLTP2-lex-yacc-V05.py',124),
  ('Var -> TRUE','Var',1,'p_Var_TRUE','PLTP2-lex-yacc-V05.py',129),
  ('Var -> FALSE','Var',1,'p_Var_FALSE','PLTP2-lex-yacc-V05.py',134),
  ('Expressao -> Expressao Operador Var','Expressao',3,'p_Expressao_Rec1','PLTP2-lex-yacc-V05.py',142),
  ('Expressao -> ( Expressao )','Expressao',3,'p_Expressao_Rec2','PLTP2-lex-yacc-V05.py',147),
  ('Operador -> +','Operador',1,'p_Operador_MAIS','PLTP2-lex-yacc-V05.py',154),
  ('Operador -> -','Operador',1,'p_Operador_Minus','PLTP2-lex-yacc-V05.py',158),
  ('Operador -> *','Operador',1,'p_Operador_MUL','PLTP2-lex-yacc-V05.py',161),
  ('Operador -> /','Operador',1,'p_Operador_Div','PLTP2-lex-yacc-V05.py',164),
  ('Operador -> %','Operador',1,'p_Operador_Rest','PLTP2-lex-yacc-V05.py',167),
  ('Codigo -> BlocoIF','Codigo',1,'p_Codigo_BlocoIF','PLTP2-lex-yacc-V05.py',175),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }','BlocoIF',7,'p_BlocoIF','PLTP2-lex-yacc-V05.py',182),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } ELSE { BlocosCodigo }','BlocoIF',11,'p_BlocoIF_ELSE','PLTP2-lex-yacc-V05.py',187),
  ('ListaCondicionais -> Condicional','ListaCondicionais',1,'p_ListaCondicionais_fin','PLTP2-lex-yacc-V05.py',193),
  ('ListaCondicionais -> ( ListaCondicionais )','ListaCondicionais',3,'p_ListaCondicionais_Capsulado','PLTP2-lex-yacc-V05.py',198),
  ('ListaCondicionais -> ! ( ListaCondicionais )','ListaCondicionais',4,'p_ListaCondicionais_Neg','PLTP2-lex-yacc-V05.py',203),
  ('ListaCondicionais -> ListaCondicionais OperadorLogico Condicional','ListaCondicionais',3,'p_ListaCondicionais_Rec','PLTP2-lex-yacc-V05.py',208),
  ('OperadorLogico -> AND','OperadorLogico',1,'p_OperadorLogico_AND','PLTP2-lex-yacc-V05.py',217),
  ('OperadorLogico -> OR','OperadorLogico',1,'p_OperadorLogico_OR','PLTP2-lex-yacc-V05.py',222),
  ('Condicional -> Var','Condicional',1,'p_Condicional_Var','PLTP2-lex-yacc-V05.py',230),
  ('Condicional -> ! ( Condicional )','Condicional',4,'p_Condicional_Neg','PLTP2-lex-yacc-V05.py',234),
  ('Condicional -> ( Condicional )','Condicional',3,'p_Condicional_Capsulado','PLTP2-lex-yacc-V05.py',240),
  ('Condicional -> Condicional OperadorCondicional Condicional','Condicional',3,'p_Condicional_OperadorCondicional','PLTP2-lex-yacc-V05.py',244),
  ('OperadorCondicional -> >','OperadorCondicional',1,'p_OperadorCondicional_Maior','PLTP2-lex-yacc-V05.py',253),
  ('OperadorCondicional -> BIGEQUAL','OperadorCondicional',1,'p_OperadorCondicional_BIGEQUAL','PLTP2-lex-yacc-V05.py',257),
  ('OperadorCondicional -> <','OperadorCondicional',1,'p_OperadorCondicional_MENOR','PLTP2-lex-yacc-V05.py',261),
  ('OperadorCondicional -> LESSEREQUAL','OperadorCondicional',1,'p_OperadorCondicional_LESSEREQUAL','PLTP2-lex-yacc-V05.py',265),
  ('OperadorCondicional -> EQUALS','OperadorCondicional',1,'p_OperadorCondicional_EQUALS','PLTP2-lex-yacc-V05.py',269),
  ('OperadorCondicional -> NOTEQUALS','OperadorCondicional',1,'p_OperadorCondicional_NOTEQUALS','PLTP2-lex-yacc-V05.py',274),
  ('Codigo -> BlocoWhileDo','Codigo',1,'p_Codigo_BlocoWhileDo','PLTP2-lex-yacc-V05.py',281),
  ('BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }','BlocoWhileDo',8,'p_BlocoWhileDo','PLTP2-lex-yacc-V05.py',286),
  ('Codigo -> BlocoLerSTDIN','Codigo',1,'p_Codigo_LerSTDIN','PLTP2-lex-yacc-V05.py',292),
  ('BlocoLerSTDIN -> ID = STDIN ( ) ;','BlocoLerSTDIN',6,'p_BlocoLerSTDIN','PLTP2-lex-yacc-V05.py',297),
  ('Codigo -> Bloco_EscreverSTDOUT','Codigo',1,'p_Codigo_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',304),
  ('Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',308),
  ('Codigo -> Bloco_Comentario','Codigo',1,'p_Codigo_Comentario','PLTP2-lex-yacc-V05.py',316),
  ('Bloco_Comentario -> COMMENT','Bloco_Comentario',1,'p_Bloco_Comentario','PLTP2-lex-yacc-V05.py',321),
  ('Codigo -> Bloco_DEFINEFUNC','Codigo',1,'p_Codigo_DEFINEFUNC','PLTP2-lex-yacc-V05.py',330),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }','Bloco_DEFINEFUNC',7,'p_Bloco_DEFINEFUNC_EMPTY','PLTP2-lex-yacc-V05.py',335),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }','Bloco_DEFINEFUNC',8,'p_Bloco_DEFINEFUNC_Atributos','PLTP2-lex-yacc-V05.py',341),
  ('ListaAtributos -> Atributo','ListaAtributos',1,'p_ListaAtributos_fin','PLTP2-lex-yacc-V05.py',347),
  ('ListaAtributos -> ListaAtributos , Atributo','ListaAtributos',3,'p_ListaAtributos_Rec','PLTP2-lex-yacc-V05.py',353),
  ('Atributo -> INT','Atributo',1,'p_Atributo','PLTP2-lex-yacc-V05.py',360),
  ('Codigo -> Bloco_CALLFUNC','Codigo',1,'p_Codigo_CALLFUNC','PLTP2-lex-yacc-V05.py',368),
  ('Bloco_CALLFUNC -> CALL FUNC ( ) ;','Bloco_CALLFUNC',5,'p_Bloco_CALLFUNC_EMPTY','PLTP2-lex-yacc-V05.py',373),
  ('Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;','Bloco_CALLFUNC',6,'p_Bloco_CALLFUNC_Atributos','PLTP2-lex-yacc-V05.py',379),
  ('INPUTVar -> Var','INPUTVar',1,'p_INPUTVar_fin','PLTP2-lex-yacc-V05.py',384),
  ('INPUTVar -> INPUTVar , Var','INPUTVar',3,'p_INPUTVar_Rec','PLTP2-lex-yacc-V05.py',389),
]
