
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAYID ARRAYNUM BIGEQUAL CALL COMMENT DEFINE DO ELSE EQUALS FALSE FOR FUNC ID IF IFELSE INT LESSEREQUAL NOTEQUALS NUM OR PAL RETURN STDIN STDOUT STRUCTARRAY TRUE WHILEPrograma : BlocosCodigoBlocosCodigo  :  Codigo BlocosCodigo  :  BlocosCodigo Codigo Codigo  :  Declaracao Declaracao :  INT ID ';' Declaracao :  INT ID '=' Expressao ';'Declaracao :  INT BlocoLerSTDIN Codigo  : Atribuicao   Atribuicao : ID '=' Expressao ';'  Atribuicao : ID '=' Bloco_CALLFUNC  Expressao : Var  Var : NUM  Var : ID  Var : TRUE  Var : FALSE  Expressao : Expressao Operador Var  Expressao : '(' Expressao  ')'  Operador : '+'  Operador : '-'  Operador : '*'  Operador : '/'  Operador : '%' Codigo  : BlocoIF BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}'  BlocoIF : IFELSE '(' ListaCondicionais ')' '{' BlocosCodigo '}' ELSE '{' BlocosCodigo '}' ListaCondicionais : Condicional ListaCondicionais : '(' ListaCondicionais ')' ListaCondicionais : '!' '(' ListaCondicionais ')' ListaCondicionais : ListaCondicionais OperadorLogico CondicionalOperadorLogico : ANDOperadorLogico : ORCondicional : VarCondicional : '!' '(' Condicional ')'Condicional : '(' Condicional ')'Condicional : Condicional OperadorCondicional CondicionalOperadorCondicional : '>'OperadorCondicional : BIGEQUAL OperadorCondicional : '<'OperadorCondicional : LESSEREQUALOperadorCondicional : EQUALSOperadorCondicional : NOTEQUALSCodigo  : BlocoWhileDo BlocoWhileDo : WHILE  '(' ListaCondicionais ')' DO '{' BlocosCodigo '}'  Codigo  : BlocoLerSTDIN BlocoLerSTDIN : ID '=' STDIN '(' ')' ';'  BlocoLerSTDIN : STRUCTARRAY ID ID '=' STDIN '(' ')' ';' Codigo  : Bloco_EscreverSTDOUT Bloco_EscreverSTDOUT : STDOUT '(' Var ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' PAL ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' STRUCTARRAY ID ID ')' ';' Codigo  : Bloco_Comentario Bloco_Comentario : COMMENT Codigo  : Bloco_Return Bloco_Return : RETURN ID ';'  Bloco_Return : RETURN NUM ';' Codigo  : Bloco_DEFINEFUNC Bloco_DEFINEFUNC : DEFINE FUNC '(' ')' '{' BlocosCodigo '}' Bloco_DEFINEFUNC : DEFINE FUNC '(' ListaAtributos  ')' '{' BlocosCodigo '}' ListaAtributos : Atributo ListaAtributos : ListaAtributos ',' Atributo Atributo : INTCodigo  : Bloco_CALLFUNC Bloco_CALLFUNC : CALL FUNC '(' ')' ';' Bloco_CALLFUNC : CALL FUNC '(' INPUTVar  ')' ';'  INPUTVar : Var  INPUTVar : INPUTVar ',' Var Codigo  :  Array Array  :  ARRAYNUM NUM ID ';' Array  :  ARRAYID ID ID ';' Codigo  : BlocoFOR BlocoFOR : FOR ID  '(' Condicional ')'  Atribuicao  '{' BlocosCodigo '}'  "
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,70,76,112,113,117,123,128,131,132,134,136,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[16,16,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,108,-9,-68,-69,-6,16,16,-48,-49,16,108,-63,-45,16,16,16,16,16,-64,-24,16,-50,-57,16,16,-43,-46,-58,16,16,-71,16,-25,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,28,29,30,32,33,34,35,36,37,38,43,44,46,47,50,52,57,67,68,69,71,74,76,77,78,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,104,112,113,114,117,123,128,131,132,134,137,139,141,142,143,144,147,148,151,152,154,159,161,163,164,165,166,167,169,170,171,172,173,174,175,176,],[17,17,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,31,37,-52,39,44,45,-3,-7,48,48,48,48,64,48,72,73,-5,48,-10,48,48,104,-54,-55,48,48,-9,48,-18,-19,-20,-21,-22,48,-30,-31,48,-36,-37,-38,-39,-40,-41,48,133,-68,-69,48,-6,17,17,-48,-49,17,-63,48,156,48,-45,17,17,17,17,17,-64,-24,17,-50,-57,17,48,17,-43,-46,-58,17,17,-71,17,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[18,18,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,18,18,-48,-49,18,-63,-45,18,18,18,18,18,-64,-24,18,-50,-57,18,18,-43,-46,-58,18,18,-71,18,-25,]),'IFELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[19,19,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,19,19,-48,-49,19,-63,-45,19,19,19,19,19,-64,-24,19,-50,-57,19,19,-43,-46,-58,19,19,-71,19,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[20,20,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,20,20,-48,-49,20,-63,-45,20,20,20,20,20,-64,-24,20,-50,-57,20,20,-43,-46,-58,20,20,-71,20,-25,]),'STRUCTARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,23,30,32,38,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[21,21,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,21,-52,-3,-7,67,-5,-10,-54,-55,-9,-68,-69,-6,21,21,-48,-49,21,-63,-45,21,21,21,21,21,-64,-24,21,-50,-57,21,21,-43,-46,-58,21,21,-71,21,-25,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[22,22,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,22,22,-48,-49,22,-63,-45,22,22,22,22,22,-64,-24,22,-50,-57,22,22,-43,-46,-58,22,22,-71,22,-25,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[23,23,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,23,23,-48,-49,23,-63,-45,23,23,23,23,23,-64,-24,23,-50,-57,23,23,-43,-46,-58,23,23,-71,23,-25,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[24,24,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,24,24,-48,-49,24,-63,-45,24,24,24,24,24,-64,-24,24,-50,-57,24,24,-43,-46,-58,24,24,-71,24,-25,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[25,25,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,25,25,-48,-49,25,-63,-45,25,25,25,25,25,-64,-24,25,-50,-57,25,25,-43,-46,-58,25,25,-71,25,-25,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,33,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,166,167,169,170,171,172,173,174,175,176,],[26,26,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,26,-5,-10,-54,-55,-9,-68,-69,-6,26,26,-48,-49,26,-63,-45,26,26,26,26,26,-64,-24,26,-50,-57,26,26,26,-43,-46,-58,26,26,-71,26,-25,]),'ARRAYNUM':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[27,27,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,27,27,-48,-49,27,-63,-45,27,27,27,27,27,-64,-24,27,-50,-57,27,27,-43,-46,-58,27,27,-71,27,-25,]),'ARRAYID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[28,28,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,28,28,-48,-49,28,-63,-45,28,28,28,28,28,-64,-24,28,-50,-57,28,28,-43,-46,-58,28,28,-71,28,-25,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,123,128,131,132,134,137,143,144,147,148,151,152,154,159,161,163,164,165,167,169,170,171,172,173,174,175,176,],[29,29,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,29,29,-48,-49,29,-63,-45,29,29,29,29,29,-64,-24,29,-50,-57,29,29,-43,-46,-58,29,29,-71,29,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,131,132,137,143,154,159,163,164,169,170,171,174,176,],[0,-1,-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,-48,-49,-63,-45,-64,-24,-50,-57,-43,-46,-58,-71,-25,]),'}':([3,4,5,6,7,8,9,10,11,12,13,14,15,23,30,32,46,50,68,69,76,112,113,117,131,132,137,143,144,147,151,154,159,161,163,164,165,169,170,171,172,174,175,176,],[-2,-4,-8,-23,-42,-44,-47,-51,-53,-56,-62,-67,-70,-52,-3,-7,-5,-10,-54,-55,-9,-68,-69,-6,-48,-49,-63,-45,159,160,164,-64,-24,169,-50,-57,171,-43,-46,-58,174,-71,176,-25,]),'=':([17,31,64,156,],[33,47,101,166,]),'(':([18,19,20,22,33,34,35,36,41,42,45,47,51,52,57,60,74,88,89,90,91,92,93,94,95,96,97,98,114,116,130,142,166,],[34,35,36,38,52,57,57,57,70,71,74,52,83,52,57,98,114,114,-30,-31,114,-36,-37,-38,-39,-40,-41,57,114,142,149,114,52,]),'NUM':([24,27,33,34,35,36,38,47,52,57,71,74,77,78,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,114,139,142,166,],[40,43,54,54,54,54,54,54,54,54,54,54,54,-18,-19,-20,-21,-22,54,-30,-31,54,-36,-37,-38,-39,-40,-41,54,54,54,54,54,]),'FUNC':([25,26,],[41,42,]),';':([31,39,40,48,49,53,54,55,56,72,73,75,102,103,109,118,119,120,138,150,162,],[46,68,69,-13,76,-11,-12,-14,-15,112,113,117,131,132,137,-16,143,-17,154,163,170,]),'STDIN':([33,47,101,],[51,51,130,]),'TRUE':([33,34,35,36,38,47,52,57,71,74,77,78,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,114,139,142,166,],[55,55,55,55,55,55,55,55,55,55,55,-18,-19,-20,-21,-22,55,-30,-31,55,-36,-37,-38,-39,-40,-41,55,55,55,55,55,]),'FALSE':([33,34,35,36,38,47,52,57,71,74,77,78,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,114,139,142,166,],[56,56,56,56,56,56,56,56,56,56,56,-18,-19,-20,-21,-22,56,-30,-31,56,-36,-37,-38,-39,-40,-41,56,56,56,56,56,]),'!':([34,35,36,57,74,88,89,90,91,92,93,94,95,96,97,98,114,142,],[60,60,60,60,116,116,-30,-31,116,-36,-37,-38,-39,-40,-41,60,116,116,]),'PAL':([38,],[66,]),'+':([48,49,53,54,55,56,75,84,118,120,],[-13,78,-11,-12,-14,-15,78,78,-16,-17,]),'-':([48,49,53,54,55,56,75,84,118,120,],[-13,79,-11,-12,-14,-15,79,79,-16,-17,]),'*':([48,49,53,54,55,56,75,84,118,120,],[-13,80,-11,-12,-14,-15,80,80,-16,-17,]),'/':([48,49,53,54,55,56,75,84,118,120,],[-13,81,-11,-12,-14,-15,81,81,-16,-17,]),'%':([48,49,53,54,55,56,75,84,118,120,],[-13,82,-11,-12,-14,-15,82,82,-16,-17,]),'>':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,92,-32,92,92,-34,92,92,92,92,-33,92,]),'BIGEQUAL':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,93,-32,93,93,-34,93,93,93,93,-33,93,]),'<':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,94,-32,94,94,-34,94,94,94,94,-33,94,]),'LESSEREQUAL':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,95,-32,95,95,-34,95,95,95,95,-33,95,]),'EQUALS':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,96,-32,96,96,-34,96,96,96,96,-33,96,]),'NOTEQUALS':([48,54,55,56,59,61,86,115,122,124,125,127,140,146,158,],[-13,-12,-14,-15,97,-32,97,97,-34,97,97,97,97,-33,97,]),')':([48,53,54,55,56,58,59,61,62,63,65,66,70,71,83,84,85,86,106,107,108,110,111,115,118,120,121,122,124,125,126,127,133,140,145,146,149,153,155,158,],[-13,-11,-12,-14,-15,87,-26,-32,99,100,102,103,105,109,119,120,121,122,135,-59,-61,138,-65,141,-16,-17,-27,-34,-29,-35,145,146,150,122,-28,-33,162,-60,-66,146,]),'AND':([48,54,55,56,58,59,61,62,63,85,86,121,122,124,125,126,127,145,146,],[-13,-12,-14,-15,89,-26,-32,89,89,89,-26,-27,-34,-29,-35,89,-26,-28,-33,]),'OR':([48,54,55,56,58,59,61,62,63,85,86,121,122,124,125,126,127,145,146,],[-13,-12,-14,-15,90,-26,-32,90,90,90,-26,-27,-34,-29,-35,90,-26,-28,-33,]),',':([48,54,55,56,106,107,108,110,111,153,155,],[-13,-12,-14,-15,136,-59,-61,139,-65,-60,-66,]),'{':([50,76,87,99,105,129,135,137,154,157,168,],[-10,-9,123,128,134,148,152,-63,-64,167,173,]),'DO':([100,],[129,]),'ELSE':([160,],[168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocosCodigo':([0,123,128,134,148,152,167,173,],[2,144,147,151,161,165,172,175,]),'Codigo':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[3,30,3,3,3,30,30,3,30,3,30,30,3,30,3,30,]),'Declaracao':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Atribuicao':([0,2,123,128,134,141,144,147,148,151,152,161,165,167,172,173,175,],[5,5,5,5,5,157,5,5,5,5,5,5,5,5,5,5,5,]),'BlocoIF':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BlocoWhileDo':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BlocoLerSTDIN':([0,2,16,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[8,8,32,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'Bloco_EscreverSTDOUT':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Bloco_Comentario':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Bloco_Return':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Bloco_DEFINEFUNC':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Bloco_CALLFUNC':([0,2,33,123,128,134,144,147,148,151,152,161,165,166,167,172,173,175,],[13,13,50,13,13,13,13,13,13,13,13,13,13,50,13,13,13,13,]),'Array':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'BlocoFOR':([0,2,123,128,134,144,147,148,151,152,161,165,167,172,173,175,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'Expressao':([33,47,52,166,],[49,75,84,49,]),'Var':([33,34,35,36,38,47,52,57,71,74,77,88,91,98,114,139,142,166,],[53,61,61,61,65,53,53,61,111,61,118,61,61,61,61,155,61,53,]),'ListaCondicionais':([34,35,36,57,98,],[58,62,63,85,126,]),'Condicional':([34,35,36,57,74,88,91,98,114,142,],[59,59,59,86,115,124,125,127,140,158,]),'Operador':([49,75,84,],[77,77,77,]),'OperadorLogico':([58,62,63,85,126,],[88,88,88,88,88,]),'OperadorCondicional':([59,86,115,124,125,127,140,158,],[91,91,91,91,91,91,91,91,]),'ListaAtributos':([70,],[106,]),'Atributo':([70,136,],[107,153,]),'INPUTVar':([71,],[110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocosCodigo','Programa',1,'p_Programa','PLTP2-lex-yacc-V05.py',24),
  ('BlocosCodigo -> Codigo','BlocosCodigo',1,'p_BlocoCodigo_fin','PLTP2-lex-yacc-V05.py',32),
  ('BlocosCodigo -> BlocosCodigo Codigo','BlocosCodigo',2,'p_BlocosCodigo_Rec','PLTP2-lex-yacc-V05.py',37),
  ('Codigo -> Declaracao','Codigo',1,'p_Codigo_Declaracao','PLTP2-lex-yacc-V05.py',46),
  ('Declaracao -> INT ID ;','Declaracao',3,'p_Declaracao','PLTP2-lex-yacc-V05.py',51),
  ('Declaracao -> INT ID = Expressao ;','Declaracao',5,'p_Declaracao_Atribuicao','PLTP2-lex-yacc-V05.py',57),
  ('Declaracao -> INT BlocoLerSTDIN','Declaracao',2,'p_Declaracao_STDIN','PLTP2-lex-yacc-V05.py',63),
  ('Codigo -> Atribuicao','Codigo',1,'p_Codigo_Atribuicao','PLTP2-lex-yacc-V05.py',71),
  ('Atribuicao -> ID = Expressao ;','Atribuicao',4,'p_Atribuicao','PLTP2-lex-yacc-V05.py',76),
  ('Atribuicao -> ID = Bloco_CALLFUNC','Atribuicao',3,'p_Atribuicao_FUNC','PLTP2-lex-yacc-V05.py',84),
  ('Expressao -> Var','Expressao',1,'p_Expressao_fin','PLTP2-lex-yacc-V05.py',94),
  ('Var -> NUM','Var',1,'p_Var_NUM','PLTP2-lex-yacc-V05.py',99),
  ('Var -> ID','Var',1,'p_Var_ID','PLTP2-lex-yacc-V05.py',105),
  ('Var -> TRUE','Var',1,'p_Var_TRUE','PLTP2-lex-yacc-V05.py',110),
  ('Var -> FALSE','Var',1,'p_Var_FALSE','PLTP2-lex-yacc-V05.py',115),
  ('Expressao -> Expressao Operador Var','Expressao',3,'p_Expressao_Rec1','PLTP2-lex-yacc-V05.py',123),
  ('Expressao -> ( Expressao )','Expressao',3,'p_Expressao_Rec2','PLTP2-lex-yacc-V05.py',128),
  ('Operador -> +','Operador',1,'p_Operador_MAIS','PLTP2-lex-yacc-V05.py',135),
  ('Operador -> -','Operador',1,'p_Operador_Minus','PLTP2-lex-yacc-V05.py',139),
  ('Operador -> *','Operador',1,'p_Operador_MUL','PLTP2-lex-yacc-V05.py',142),
  ('Operador -> /','Operador',1,'p_Operador_Div','PLTP2-lex-yacc-V05.py',145),
  ('Operador -> %','Operador',1,'p_Operador_Rest','PLTP2-lex-yacc-V05.py',148),
  ('Codigo -> BlocoIF','Codigo',1,'p_Codigo_BlocoIF','PLTP2-lex-yacc-V05.py',156),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }','BlocoIF',7,'p_BlocoIF','PLTP2-lex-yacc-V05.py',163),
  ('BlocoIF -> IFELSE ( ListaCondicionais ) { BlocosCodigo } ELSE { BlocosCodigo }','BlocoIF',11,'p_BlocoIF_ELSE','PLTP2-lex-yacc-V05.py',168),
  ('ListaCondicionais -> Condicional','ListaCondicionais',1,'p_ListaCondicionais_fin','PLTP2-lex-yacc-V05.py',174),
  ('ListaCondicionais -> ( ListaCondicionais )','ListaCondicionais',3,'p_ListaCondicionais_Capsulado','PLTP2-lex-yacc-V05.py',179),
  ('ListaCondicionais -> ! ( ListaCondicionais )','ListaCondicionais',4,'p_ListaCondicionais_Neg','PLTP2-lex-yacc-V05.py',184),
  ('ListaCondicionais -> ListaCondicionais OperadorLogico Condicional','ListaCondicionais',3,'p_ListaCondicionais_Rec','PLTP2-lex-yacc-V05.py',189),
  ('OperadorLogico -> AND','OperadorLogico',1,'p_OperadorLogico_AND','PLTP2-lex-yacc-V05.py',198),
  ('OperadorLogico -> OR','OperadorLogico',1,'p_OperadorLogico_OR','PLTP2-lex-yacc-V05.py',203),
  ('Condicional -> Var','Condicional',1,'p_Condicional_Var','PLTP2-lex-yacc-V05.py',211),
  ('Condicional -> ! ( Condicional )','Condicional',4,'p_Condicional_Neg','PLTP2-lex-yacc-V05.py',215),
  ('Condicional -> ( Condicional )','Condicional',3,'p_Condicional_Capsulado','PLTP2-lex-yacc-V05.py',221),
  ('Condicional -> Condicional OperadorCondicional Condicional','Condicional',3,'p_Condicional_OperadorCondicional','PLTP2-lex-yacc-V05.py',225),
  ('OperadorCondicional -> >','OperadorCondicional',1,'p_OperadorCondicional_Maior','PLTP2-lex-yacc-V05.py',234),
  ('OperadorCondicional -> BIGEQUAL','OperadorCondicional',1,'p_OperadorCondicional_BIGEQUAL','PLTP2-lex-yacc-V05.py',238),
  ('OperadorCondicional -> <','OperadorCondicional',1,'p_OperadorCondicional_MENOR','PLTP2-lex-yacc-V05.py',242),
  ('OperadorCondicional -> LESSEREQUAL','OperadorCondicional',1,'p_OperadorCondicional_LESSEREQUAL','PLTP2-lex-yacc-V05.py',246),
  ('OperadorCondicional -> EQUALS','OperadorCondicional',1,'p_OperadorCondicional_EQUALS','PLTP2-lex-yacc-V05.py',250),
  ('OperadorCondicional -> NOTEQUALS','OperadorCondicional',1,'p_OperadorCondicional_NOTEQUALS','PLTP2-lex-yacc-V05.py',255),
  ('Codigo -> BlocoWhileDo','Codigo',1,'p_Codigo_BlocoWhileDo','PLTP2-lex-yacc-V05.py',262),
  ('BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }','BlocoWhileDo',8,'p_BlocoWhileDo','PLTP2-lex-yacc-V05.py',267),
  ('Codigo -> BlocoLerSTDIN','Codigo',1,'p_Codigo_LerSTDIN','PLTP2-lex-yacc-V05.py',273),
  ('BlocoLerSTDIN -> ID = STDIN ( ) ;','BlocoLerSTDIN',6,'p_BlocoLerSTDIN','PLTP2-lex-yacc-V05.py',278),
  ('BlocoLerSTDIN -> STRUCTARRAY ID ID = STDIN ( ) ;','BlocoLerSTDIN',8,'p_BlocoLerSTDIN_STRUCTARRAY','PLTP2-lex-yacc-V05.py',284),
  ('Codigo -> Bloco_EscreverSTDOUT','Codigo',1,'p_Codigo_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',290),
  ('Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',294),
  ('Bloco_EscreverSTDOUT -> STDOUT ( PAL ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT_PAL','PLTP2-lex-yacc-V05.py',301),
  ('Bloco_EscreverSTDOUT -> STDOUT ( STRUCTARRAY ID ID ) ;','Bloco_EscreverSTDOUT',7,'p_Bloco_EscreverSTDOUT_STRUCTARRAY','PLTP2-lex-yacc-V05.py',308),
  ('Codigo -> Bloco_Comentario','Codigo',1,'p_Codigo_Comentario','PLTP2-lex-yacc-V05.py',316),
  ('Bloco_Comentario -> COMMENT','Bloco_Comentario',1,'p_Bloco_Comentario','PLTP2-lex-yacc-V05.py',321),
  ('Codigo -> Bloco_Return','Codigo',1,'p_Codigo_Return','PLTP2-lex-yacc-V05.py',328),
  ('Bloco_Return -> RETURN ID ;','Bloco_Return',3,'p_Bloco_ReturnID','PLTP2-lex-yacc-V05.py',333),
  ('Bloco_Return -> RETURN NUM ;','Bloco_Return',3,'p_Bloco_ReturnNUM','PLTP2-lex-yacc-V05.py',339),
  ('Codigo -> Bloco_DEFINEFUNC','Codigo',1,'p_Codigo_DEFINEFUNC','PLTP2-lex-yacc-V05.py',346),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }','Bloco_DEFINEFUNC',7,'p_Bloco_DEFINEFUNC_EMPTY','PLTP2-lex-yacc-V05.py',351),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }','Bloco_DEFINEFUNC',8,'p_Bloco_DEFINEFUNC_Atributos','PLTP2-lex-yacc-V05.py',357),
  ('ListaAtributos -> Atributo','ListaAtributos',1,'p_ListaAtributos_fin','PLTP2-lex-yacc-V05.py',363),
  ('ListaAtributos -> ListaAtributos , Atributo','ListaAtributos',3,'p_ListaAtributos_Rec','PLTP2-lex-yacc-V05.py',369),
  ('Atributo -> INT','Atributo',1,'p_Atributo','PLTP2-lex-yacc-V05.py',376),
  ('Codigo -> Bloco_CALLFUNC','Codigo',1,'p_Codigo_CALLFUNC','PLTP2-lex-yacc-V05.py',384),
  ('Bloco_CALLFUNC -> CALL FUNC ( ) ;','Bloco_CALLFUNC',5,'p_Bloco_CALLFUNC_EMPTY','PLTP2-lex-yacc-V05.py',389),
  ('Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;','Bloco_CALLFUNC',6,'p_Bloco_CALLFUNC_Atributos','PLTP2-lex-yacc-V05.py',395),
  ('INPUTVar -> Var','INPUTVar',1,'p_INPUTVar_fin','PLTP2-lex-yacc-V05.py',400),
  ('INPUTVar -> INPUTVar , Var','INPUTVar',3,'p_INPUTVar_Rec','PLTP2-lex-yacc-V05.py',405),
  ('Codigo -> Array','Codigo',1,'p_Codigo_ARRAY','PLTP2-lex-yacc-V05.py',411),
  ('Array -> ARRAYNUM NUM ID ;','Array',4,'p_Codigo_ARRAYNUM','PLTP2-lex-yacc-V05.py',415),
  ('Array -> ARRAYID ID ID ;','Array',4,'p_Codigo_ARRAYID','PLTP2-lex-yacc-V05.py',420),
  ('Codigo -> BlocoFOR','Codigo',1,'p_Codigo_BlocoFOR','PLTP2-lex-yacc-V05.py',426),
  ('BlocoFOR -> FOR ID ( Condicional ) Atribuicao { BlocosCodigo }','BlocoFOR',9,'p_BlocoFOR','PLTP2-lex-yacc-V05.py',431),
]
