
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAYID ARRAYNUM BIGEQUAL CALL COMMENT DEFINE DO ELSE EQUALS FALSE FOR FUNC ID IF IFELSE INT LESSEREQUAL NOTEQUALS NUM OR PAL STDIN STDOUT STRUCTARRAY TRUE WHILEPrograma : BlocosCodigoBlocosCodigo  :  Codigo BlocosCodigo  :  BlocosCodigo Codigo Codigo  :  Declaracao Declaracao :  INT ID ';' Declaracao :  INT ID '=' Expressao ';'Declaracao :  INT BlocoLerSTDIN Codigo  : Atribuicao   Atribuicao : ID '=' Expressao ';'  Atribuicao : ID '=' Bloco_CALLFUNC  Expressao : Var  Var : NUM  Var : ID  Var : TRUE  Var : FALSE  Expressao : Expressao Operador Var  Expressao : '(' Expressao  ')'  Operador : '+'  Operador : '-'  Operador : '*'  Operador : '/'  Operador : '%' Codigo  : BlocoIF BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}'  BlocoIF : IFELSE '(' ListaCondicionais ')' '{' BlocosCodigo '}' ELSE '{' BlocosCodigo '}' ListaCondicionais : Condicional ListaCondicionais : '(' ListaCondicionais ')' ListaCondicionais : '!' '(' ListaCondicionais ')' ListaCondicionais : ListaCondicionais OperadorLogico CondicionalOperadorLogico : ANDOperadorLogico : ORCondicional : VarCondicional : '!' '(' Condicional ')'Condicional : '(' Condicional ')'Condicional : Condicional OperadorCondicional CondicionalOperadorCondicional : '>'OperadorCondicional : BIGEQUAL OperadorCondicional : '<'OperadorCondicional : LESSEREQUALOperadorCondicional : EQUALSOperadorCondicional : NOTEQUALSCodigo  : BlocoWhileDo BlocoWhileDo : WHILE  '(' ListaCondicionais ')' DO '{' BlocosCodigo '}'  Codigo  : BlocoLerSTDIN BlocoLerSTDIN : ID '=' STDIN '(' ')' ';'  BlocoLerSTDIN : STRUCTARRAY ID ID '=' STDIN '(' ')' ';' Codigo  : Bloco_EscreverSTDOUT Bloco_EscreverSTDOUT : STDOUT '(' Var ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' PAL ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' STRUCTARRAY ID ID ')' ';' Codigo  : Bloco_Comentario Bloco_Comentario : COMMENT Codigo  : Bloco_DEFINEFUNC Bloco_DEFINEFUNC : DEFINE FUNC '(' ')' '{' BlocosCodigo '}' Bloco_DEFINEFUNC : DEFINE FUNC '(' ListaAtributos  ')' '{' BlocosCodigo '}' ListaAtributos : Atributo ListaAtributos : ListaAtributos ',' Atributo Atributo : INTCodigo  : Bloco_CALLFUNC Bloco_CALLFUNC : CALL FUNC '(' ')' ';' Bloco_CALLFUNC : CALL FUNC '(' INPUTVar  ')' ';'  INPUTVar : Var  INPUTVar : INPUTVar ',' Var Codigo  :  Array Array  :  ARRAYNUM NUM ID ';' Array  :  ARRAYID ID ID ';' Codigo  : BlocoFOR BlocoFOR : FOR ID  '(' Condicional ')'  Atribuicao  '{' BlocosCodigo '}'  "
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,64,70,106,107,111,117,122,125,126,128,130,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[15,15,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,102,-9,-65,-66,-6,15,15,-48,-49,15,102,-60,-45,15,15,15,15,15,-61,-24,15,-50,-54,15,15,-43,-46,-55,15,15,-68,15,-25,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,26,27,28,30,31,32,33,34,35,36,39,40,42,43,46,48,53,63,65,68,70,71,72,73,74,75,76,82,83,84,85,86,87,88,89,90,91,92,98,106,107,108,111,117,122,125,126,128,131,133,135,136,137,138,141,142,145,146,148,153,155,157,158,159,160,161,163,164,165,166,167,168,169,170,],[16,16,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,29,35,-52,40,41,-3,-7,44,44,44,44,60,44,66,67,-5,44,-10,44,44,98,44,44,-9,44,-18,-19,-20,-21,-22,44,-30,-31,44,-36,-37,-38,-39,-40,-41,44,127,-65,-66,44,-6,16,16,-48,-49,16,-60,44,150,44,-45,16,16,16,16,16,-61,-24,16,-50,-54,16,44,16,-43,-46,-55,16,16,-68,16,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[17,17,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,17,17,-48,-49,17,-60,-45,17,17,17,17,17,-61,-24,17,-50,-54,17,17,-43,-46,-55,17,17,-68,17,-25,]),'IFELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[18,18,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,18,18,-48,-49,18,-60,-45,18,18,18,18,18,-61,-24,18,-50,-54,18,18,-43,-46,-55,18,18,-68,18,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[19,19,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,19,19,-48,-49,19,-60,-45,19,19,19,19,19,-61,-24,19,-50,-54,19,19,-43,-46,-55,19,19,-68,19,-25,]),'STRUCTARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,22,28,30,36,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[20,20,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,20,-52,-3,-7,63,-5,-10,-9,-65,-66,-6,20,20,-48,-49,20,-60,-45,20,20,20,20,20,-61,-24,20,-50,-54,20,20,-43,-46,-55,20,20,-68,20,-25,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[21,21,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,21,21,-48,-49,21,-60,-45,21,21,21,21,21,-61,-24,21,-50,-54,21,21,-43,-46,-55,21,21,-68,21,-25,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[22,22,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,22,22,-48,-49,22,-60,-45,22,22,22,22,22,-61,-24,22,-50,-54,22,22,-43,-46,-55,22,22,-68,22,-25,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[23,23,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,23,23,-48,-49,23,-60,-45,23,23,23,23,23,-61,-24,23,-50,-54,23,23,-43,-46,-55,23,23,-68,23,-25,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,31,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,160,161,163,164,165,166,167,168,169,170,],[24,24,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,24,-5,-10,-9,-65,-66,-6,24,24,-48,-49,24,-60,-45,24,24,24,24,24,-61,-24,24,-50,-54,24,24,24,-43,-46,-55,24,24,-68,24,-25,]),'ARRAYNUM':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[25,25,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,25,25,-48,-49,25,-60,-45,25,25,25,25,25,-61,-24,25,-50,-54,25,25,-43,-46,-55,25,25,-68,25,-25,]),'ARRAYID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[26,26,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,26,26,-48,-49,26,-60,-45,26,26,26,26,26,-61,-24,26,-50,-54,26,26,-43,-46,-55,26,26,-68,26,-25,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,117,122,125,126,128,131,137,138,141,142,145,146,148,153,155,157,158,159,161,163,164,165,166,167,168,169,170,],[27,27,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,27,27,-48,-49,27,-60,-45,27,27,27,27,27,-61,-24,27,-50,-54,27,27,-43,-46,-55,27,27,-68,27,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,125,126,131,137,148,153,157,158,163,164,165,168,170,],[0,-1,-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,-48,-49,-60,-45,-61,-24,-50,-54,-43,-46,-55,-68,-25,]),'}':([3,4,5,6,7,8,9,10,11,12,13,14,22,28,30,42,46,70,106,107,111,125,126,131,137,138,141,145,148,153,155,157,158,159,163,164,165,166,168,169,170,],[-2,-4,-8,-23,-42,-44,-47,-51,-53,-59,-64,-67,-52,-3,-7,-5,-10,-9,-65,-66,-6,-48,-49,-60,-45,153,154,158,-61,-24,163,-50,-54,165,-43,-46,-55,168,-68,170,-25,]),'=':([16,29,60,150,],[31,43,95,160,]),'(':([17,18,19,21,31,32,33,34,37,38,41,43,47,48,53,56,68,82,83,84,85,86,87,88,89,90,91,92,108,110,124,136,160,],[32,33,34,36,48,53,53,53,64,65,68,48,77,48,53,92,108,108,-30,-31,108,-36,-37,-38,-39,-40,-41,53,108,136,143,108,48,]),'FUNC':([23,24,],[37,38,]),'NUM':([25,31,32,33,34,36,43,48,53,65,68,71,72,73,74,75,76,82,83,84,85,86,87,88,89,90,91,92,108,133,136,160,],[39,50,50,50,50,50,50,50,50,50,50,50,-18,-19,-20,-21,-22,50,-30,-31,50,-36,-37,-38,-39,-40,-41,50,50,50,50,50,]),';':([29,44,45,49,50,51,52,66,67,69,96,97,103,112,113,114,132,144,156,],[42,-13,70,-11,-12,-14,-15,106,107,111,125,126,131,-16,137,-17,148,157,164,]),'STDIN':([31,43,95,],[47,47,124,]),'TRUE':([31,32,33,34,36,43,48,53,65,68,71,72,73,74,75,76,82,83,84,85,86,87,88,89,90,91,92,108,133,136,160,],[51,51,51,51,51,51,51,51,51,51,51,-18,-19,-20,-21,-22,51,-30,-31,51,-36,-37,-38,-39,-40,-41,51,51,51,51,51,]),'FALSE':([31,32,33,34,36,43,48,53,65,68,71,72,73,74,75,76,82,83,84,85,86,87,88,89,90,91,92,108,133,136,160,],[52,52,52,52,52,52,52,52,52,52,52,-18,-19,-20,-21,-22,52,-30,-31,52,-36,-37,-38,-39,-40,-41,52,52,52,52,52,]),'!':([32,33,34,53,68,82,83,84,85,86,87,88,89,90,91,92,108,136,],[56,56,56,56,110,110,-30,-31,110,-36,-37,-38,-39,-40,-41,56,110,110,]),'PAL':([36,],[62,]),'+':([44,45,49,50,51,52,69,78,112,114,],[-13,72,-11,-12,-14,-15,72,72,-16,-17,]),'-':([44,45,49,50,51,52,69,78,112,114,],[-13,73,-11,-12,-14,-15,73,73,-16,-17,]),'*':([44,45,49,50,51,52,69,78,112,114,],[-13,74,-11,-12,-14,-15,74,74,-16,-17,]),'/':([44,45,49,50,51,52,69,78,112,114,],[-13,75,-11,-12,-14,-15,75,75,-16,-17,]),'%':([44,45,49,50,51,52,69,78,112,114,],[-13,76,-11,-12,-14,-15,76,76,-16,-17,]),'>':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,86,-32,86,86,-34,86,86,86,86,-33,86,]),'BIGEQUAL':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,87,-32,87,87,-34,87,87,87,87,-33,87,]),'<':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,88,-32,88,88,-34,88,88,88,88,-33,88,]),'LESSEREQUAL':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,89,-32,89,89,-34,89,89,89,89,-33,89,]),'EQUALS':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,90,-32,90,90,-34,90,90,90,90,-33,90,]),'NOTEQUALS':([44,50,51,52,55,57,80,109,116,118,119,121,134,140,152,],[-13,-12,-14,-15,91,-32,91,91,-34,91,91,91,91,-33,91,]),')':([44,49,50,51,52,54,55,57,58,59,61,62,64,65,77,78,79,80,100,101,102,104,105,109,112,114,115,116,118,119,120,121,127,134,139,140,143,147,149,152,],[-13,-11,-12,-14,-15,81,-26,-32,93,94,96,97,99,103,113,114,115,116,129,-56,-58,132,-62,135,-16,-17,-27,-34,-29,-35,139,140,144,116,-28,-33,156,-57,-63,140,]),'AND':([44,50,51,52,54,55,57,58,59,79,80,115,116,118,119,120,121,139,140,],[-13,-12,-14,-15,83,-26,-32,83,83,83,-26,-27,-34,-29,-35,83,-26,-28,-33,]),'OR':([44,50,51,52,54,55,57,58,59,79,80,115,116,118,119,120,121,139,140,],[-13,-12,-14,-15,84,-26,-32,84,84,84,-26,-27,-34,-29,-35,84,-26,-28,-33,]),',':([44,50,51,52,100,101,102,104,105,147,149,],[-13,-12,-14,-15,130,-56,-58,133,-62,-57,-63,]),'{':([46,70,81,93,99,123,129,131,148,151,162,],[-10,-9,117,122,128,142,146,-60,-61,161,167,]),'DO':([94,],[123,]),'ELSE':([154,],[162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocosCodigo':([0,117,122,128,142,146,161,167,],[2,138,141,145,155,159,166,169,]),'Codigo':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[3,28,3,3,3,28,28,3,28,3,28,28,3,28,3,28,]),'Declaracao':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Atribuicao':([0,2,117,122,128,135,138,141,142,145,146,155,159,161,166,167,169,],[5,5,5,5,5,151,5,5,5,5,5,5,5,5,5,5,5,]),'BlocoIF':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BlocoWhileDo':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BlocoLerSTDIN':([0,2,15,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[8,8,30,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'Bloco_EscreverSTDOUT':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Bloco_Comentario':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Bloco_DEFINEFUNC':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Bloco_CALLFUNC':([0,2,31,117,122,128,138,141,142,145,146,155,159,160,161,166,167,169,],[12,12,46,12,12,12,12,12,12,12,12,12,12,46,12,12,12,12,]),'Array':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'BlocoFOR':([0,2,117,122,128,138,141,142,145,146,155,159,161,166,167,169,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'Expressao':([31,43,48,160,],[45,69,78,45,]),'Var':([31,32,33,34,36,43,48,53,65,68,71,82,85,92,108,133,136,160,],[49,57,57,57,61,49,49,57,105,57,112,57,57,57,57,149,57,49,]),'ListaCondicionais':([32,33,34,53,92,],[54,58,59,79,120,]),'Condicional':([32,33,34,53,68,82,85,92,108,136,],[55,55,55,80,109,118,119,121,134,152,]),'Operador':([45,69,78,],[71,71,71,]),'OperadorLogico':([54,58,59,79,120,],[82,82,82,82,82,]),'OperadorCondicional':([55,80,109,118,119,121,134,152,],[85,85,85,85,85,85,85,85,]),'ListaAtributos':([64,],[100,]),'Atributo':([64,130,],[101,147,]),'INPUTVar':([65,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocosCodigo','Programa',1,'p_Programa','PLTP2-lex-yacc-V05.py',24),
  ('BlocosCodigo -> Codigo','BlocosCodigo',1,'p_BlocoCodigo_fin','PLTP2-lex-yacc-V05.py',32),
  ('BlocosCodigo -> BlocosCodigo Codigo','BlocosCodigo',2,'p_BlocosCodigo_Rec','PLTP2-lex-yacc-V05.py',37),
  ('Codigo -> Declaracao','Codigo',1,'p_Codigo_Declaracao','PLTP2-lex-yacc-V05.py',46),
  ('Declaracao -> INT ID ;','Declaracao',3,'p_Declaracao','PLTP2-lex-yacc-V05.py',51),
  ('Declaracao -> INT ID = Expressao ;','Declaracao',5,'p_Declaracao_Atribuicao','PLTP2-lex-yacc-V05.py',57),
  ('Declaracao -> INT BlocoLerSTDIN','Declaracao',2,'p_Declaracao_STDIN','PLTP2-lex-yacc-V05.py',63),
  ('Codigo -> Atribuicao','Codigo',1,'p_Codigo_Atribuicao','PLTP2-lex-yacc-V05.py',71),
  ('Atribuicao -> ID = Expressao ;','Atribuicao',4,'p_Atribuicao','PLTP2-lex-yacc-V05.py',76),
  ('Atribuicao -> ID = Bloco_CALLFUNC','Atribuicao',3,'p_Atribuicao_FUNC','PLTP2-lex-yacc-V05.py',84),
  ('Expressao -> Var','Expressao',1,'p_Expressao_fin','PLTP2-lex-yacc-V05.py',94),
  ('Var -> NUM','Var',1,'p_Var_NUM','PLTP2-lex-yacc-V05.py',99),
  ('Var -> ID','Var',1,'p_Var_ID','PLTP2-lex-yacc-V05.py',105),
  ('Var -> TRUE','Var',1,'p_Var_TRUE','PLTP2-lex-yacc-V05.py',110),
  ('Var -> FALSE','Var',1,'p_Var_FALSE','PLTP2-lex-yacc-V05.py',115),
  ('Expressao -> Expressao Operador Var','Expressao',3,'p_Expressao_Rec1','PLTP2-lex-yacc-V05.py',123),
  ('Expressao -> ( Expressao )','Expressao',3,'p_Expressao_Rec2','PLTP2-lex-yacc-V05.py',128),
  ('Operador -> +','Operador',1,'p_Operador_MAIS','PLTP2-lex-yacc-V05.py',135),
  ('Operador -> -','Operador',1,'p_Operador_Minus','PLTP2-lex-yacc-V05.py',139),
  ('Operador -> *','Operador',1,'p_Operador_MUL','PLTP2-lex-yacc-V05.py',142),
  ('Operador -> /','Operador',1,'p_Operador_Div','PLTP2-lex-yacc-V05.py',145),
  ('Operador -> %','Operador',1,'p_Operador_Rest','PLTP2-lex-yacc-V05.py',148),
  ('Codigo -> BlocoIF','Codigo',1,'p_Codigo_BlocoIF','PLTP2-lex-yacc-V05.py',156),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }','BlocoIF',7,'p_BlocoIF','PLTP2-lex-yacc-V05.py',163),
  ('BlocoIF -> IFELSE ( ListaCondicionais ) { BlocosCodigo } ELSE { BlocosCodigo }','BlocoIF',11,'p_BlocoIF_ELSE','PLTP2-lex-yacc-V05.py',168),
  ('ListaCondicionais -> Condicional','ListaCondicionais',1,'p_ListaCondicionais_fin','PLTP2-lex-yacc-V05.py',174),
  ('ListaCondicionais -> ( ListaCondicionais )','ListaCondicionais',3,'p_ListaCondicionais_Capsulado','PLTP2-lex-yacc-V05.py',179),
  ('ListaCondicionais -> ! ( ListaCondicionais )','ListaCondicionais',4,'p_ListaCondicionais_Neg','PLTP2-lex-yacc-V05.py',184),
  ('ListaCondicionais -> ListaCondicionais OperadorLogico Condicional','ListaCondicionais',3,'p_ListaCondicionais_Rec','PLTP2-lex-yacc-V05.py',189),
  ('OperadorLogico -> AND','OperadorLogico',1,'p_OperadorLogico_AND','PLTP2-lex-yacc-V05.py',198),
  ('OperadorLogico -> OR','OperadorLogico',1,'p_OperadorLogico_OR','PLTP2-lex-yacc-V05.py',203),
  ('Condicional -> Var','Condicional',1,'p_Condicional_Var','PLTP2-lex-yacc-V05.py',211),
  ('Condicional -> ! ( Condicional )','Condicional',4,'p_Condicional_Neg','PLTP2-lex-yacc-V05.py',215),
  ('Condicional -> ( Condicional )','Condicional',3,'p_Condicional_Capsulado','PLTP2-lex-yacc-V05.py',221),
  ('Condicional -> Condicional OperadorCondicional Condicional','Condicional',3,'p_Condicional_OperadorCondicional','PLTP2-lex-yacc-V05.py',225),
  ('OperadorCondicional -> >','OperadorCondicional',1,'p_OperadorCondicional_Maior','PLTP2-lex-yacc-V05.py',234),
  ('OperadorCondicional -> BIGEQUAL','OperadorCondicional',1,'p_OperadorCondicional_BIGEQUAL','PLTP2-lex-yacc-V05.py',238),
  ('OperadorCondicional -> <','OperadorCondicional',1,'p_OperadorCondicional_MENOR','PLTP2-lex-yacc-V05.py',242),
  ('OperadorCondicional -> LESSEREQUAL','OperadorCondicional',1,'p_OperadorCondicional_LESSEREQUAL','PLTP2-lex-yacc-V05.py',246),
  ('OperadorCondicional -> EQUALS','OperadorCondicional',1,'p_OperadorCondicional_EQUALS','PLTP2-lex-yacc-V05.py',250),
  ('OperadorCondicional -> NOTEQUALS','OperadorCondicional',1,'p_OperadorCondicional_NOTEQUALS','PLTP2-lex-yacc-V05.py',255),
  ('Codigo -> BlocoWhileDo','Codigo',1,'p_Codigo_BlocoWhileDo','PLTP2-lex-yacc-V05.py',262),
  ('BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }','BlocoWhileDo',8,'p_BlocoWhileDo','PLTP2-lex-yacc-V05.py',267),
  ('Codigo -> BlocoLerSTDIN','Codigo',1,'p_Codigo_LerSTDIN','PLTP2-lex-yacc-V05.py',273),
  ('BlocoLerSTDIN -> ID = STDIN ( ) ;','BlocoLerSTDIN',6,'p_BlocoLerSTDIN','PLTP2-lex-yacc-V05.py',278),
  ('BlocoLerSTDIN -> STRUCTARRAY ID ID = STDIN ( ) ;','BlocoLerSTDIN',8,'p_BlocoLerSTDIN_STRUCTARRAY','PLTP2-lex-yacc-V05.py',284),
  ('Codigo -> Bloco_EscreverSTDOUT','Codigo',1,'p_Codigo_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',290),
  ('Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT','PLTP2-lex-yacc-V05.py',294),
  ('Bloco_EscreverSTDOUT -> STDOUT ( PAL ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT_PAL','PLTP2-lex-yacc-V05.py',301),
  ('Bloco_EscreverSTDOUT -> STDOUT ( STRUCTARRAY ID ID ) ;','Bloco_EscreverSTDOUT',7,'p_Bloco_EscreverSTDOUT_STRUCTARRAY','PLTP2-lex-yacc-V05.py',308),
  ('Codigo -> Bloco_Comentario','Codigo',1,'p_Codigo_Comentario','PLTP2-lex-yacc-V05.py',316),
  ('Bloco_Comentario -> COMMENT','Bloco_Comentario',1,'p_Bloco_Comentario','PLTP2-lex-yacc-V05.py',321),
  ('Codigo -> Bloco_DEFINEFUNC','Codigo',1,'p_Codigo_DEFINEFUNC','PLTP2-lex-yacc-V05.py',330),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }','Bloco_DEFINEFUNC',7,'p_Bloco_DEFINEFUNC_EMPTY','PLTP2-lex-yacc-V05.py',335),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }','Bloco_DEFINEFUNC',8,'p_Bloco_DEFINEFUNC_Atributos','PLTP2-lex-yacc-V05.py',341),
  ('ListaAtributos -> Atributo','ListaAtributos',1,'p_ListaAtributos_fin','PLTP2-lex-yacc-V05.py',347),
  ('ListaAtributos -> ListaAtributos , Atributo','ListaAtributos',3,'p_ListaAtributos_Rec','PLTP2-lex-yacc-V05.py',353),
  ('Atributo -> INT','Atributo',1,'p_Atributo','PLTP2-lex-yacc-V05.py',360),
  ('Codigo -> Bloco_CALLFUNC','Codigo',1,'p_Codigo_CALLFUNC','PLTP2-lex-yacc-V05.py',368),
  ('Bloco_CALLFUNC -> CALL FUNC ( ) ;','Bloco_CALLFUNC',5,'p_Bloco_CALLFUNC_EMPTY','PLTP2-lex-yacc-V05.py',373),
  ('Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;','Bloco_CALLFUNC',6,'p_Bloco_CALLFUNC_Atributos','PLTP2-lex-yacc-V05.py',379),
  ('INPUTVar -> Var','INPUTVar',1,'p_INPUTVar_fin','PLTP2-lex-yacc-V05.py',384),
  ('INPUTVar -> INPUTVar , Var','INPUTVar',3,'p_INPUTVar_Rec','PLTP2-lex-yacc-V05.py',389),
  ('Codigo -> Array','Codigo',1,'p_Codigo_ARRAY','PLTP2-lex-yacc-V05.py',395),
  ('Array -> ARRAYNUM NUM ID ;','Array',4,'p_Codigo_ARRAYNUM','PLTP2-lex-yacc-V05.py',399),
  ('Array -> ARRAYID ID ID ;','Array',4,'p_Codigo_ARRAYID','PLTP2-lex-yacc-V05.py',404),
  ('Codigo -> BlocoFOR','Codigo',1,'p_Codigo_BlocoFOR','PLTP2-lex-yacc-V05.py',410),
  ('BlocoFOR -> FOR ID ( Condicional ) Atribuicao { BlocosCodigo }','BlocoFOR',9,'p_BlocoFOR','PLTP2-lex-yacc-V05.py',415),
]
