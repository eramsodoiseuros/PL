Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> BlocosCodigo
Rule 2     BlocosCodigo -> Codigo
Rule 3     BlocosCodigo -> BlocosCodigo Codigo
Rule 4     Codigo -> Declaracao
Rule 5     Declaracao -> INT ID ;
Rule 6     Codigo -> Atribuicao
Rule 7     Atribuicao -> ID = Expressao ;
Rule 8     Atribuicao -> ID = Bloco_CALLFUNC
Rule 9     Expressao -> Var
Rule 10    Var -> NUM
Rule 11    Var -> ID
Rule 12    Var -> TRUE
Rule 13    Var -> FALSE
Rule 14    Expressao -> Expressao Operador Var
Rule 15    Expressao -> ( Expressao )
Rule 16    Operador -> +
Rule 17    Operador -> -
Rule 18    Operador -> *
Rule 19    Operador -> /
Rule 20    Operador -> %
Rule 21    Codigo -> BlocoIF
Rule 22    BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }
Rule 23    ListaCondicionais -> Condicional
Rule 24    ListaCondicionais -> ( ListaCondicionais )
Rule 25    ListaCondicionais -> ! ( ListaCondicionais )
Rule 26    ListaCondicionais -> ListaCondicionais OperadorLogico Condicional
Rule 27    OperadorLogico -> AND
Rule 28    OperadorLogico -> OR
Rule 29    Condicional -> Var
Rule 30    Condicional -> ! ( Condicional )
Rule 31    Condicional -> ( Condicional )
Rule 32    Condicional -> Condicional OperadorCondicional Condicional
Rule 33    OperadorCondicional -> >
Rule 34    OperadorCondicional -> BIGEQUAL
Rule 35    OperadorCondicional -> <
Rule 36    OperadorCondicional -> LESSEREQUAL
Rule 37    OperadorCondicional -> EQUALS
Rule 38    OperadorCondicional -> NOTEQUALS
Rule 39    Codigo -> BlocoWhileDo
Rule 40    BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }
Rule 41    Codigo -> BlocoLerSTDIN
Rule 42    BlocoLerSTDIN -> ID = STDIN ( ) ;
Rule 43    Codigo -> Bloco_EscreverSTDOUT
Rule 44    Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;
Rule 45    Codigo -> Bloco_Comentario
Rule 46    Bloco_Comentario -> COMMENT
Rule 47    Codigo -> Bloco_DEFINEFUNC
Rule 48    Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }
Rule 49    Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
Rule 50    ListaAtributos -> Atributo
Rule 51    ListaAtributos -> ListaAtributos , Atributo
Rule 52    Atributo -> INT
Rule 53    Codigo -> Bloco_CALLFUNC
Rule 54    Bloco_CALLFUNC -> CALL FUNC ( ) ;
Rule 55    Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;
Rule 56    INPUTVar -> Var
Rule 57    INPUTVar -> INPUTVar , Var

Terminals, with rules where they appear

!                    : 25 30
%                    : 20
(                    : 15 22 24 25 30 31 40 42 44 48 49 54 55
)                    : 15 22 24 25 30 31 40 42 44 48 49 54 55
*                    : 18
+                    : 16
,                    : 51 57
-                    : 17
/                    : 19
;                    : 5 7 42 44 54 55
<                    : 35
=                    : 7 8 42
>                    : 33
AND                  : 27
BIGEQUAL             : 34
CALL                 : 54 55
COMMENT              : 46
DEFINE               : 48 49
DO                   : 40
EQUALS               : 37
FALSE                : 13
FUNC                 : 48 49 54 55
ID                   : 5 7 8 11 42
IF                   : 22
INT                  : 5 52
LESSEREQUAL          : 36
NOTEQUALS            : 38
NUM                  : 10
OR                   : 28
STDIN                : 42
STDOUT               : 44
TRUE                 : 12
WHILE                : 40
error                : 
{                    : 22 40 48 49
}                    : 22 40 48 49

Nonterminals, with rules where they appear

Atribuicao           : 6
Atributo             : 50 51
BlocoIF              : 21
BlocoLerSTDIN        : 41
BlocoWhileDo         : 39
Bloco_CALLFUNC       : 8 53
Bloco_Comentario     : 45
Bloco_DEFINEFUNC     : 47
Bloco_EscreverSTDOUT : 43
BlocosCodigo         : 1 3 22 40 48 49
Codigo               : 2 3
Condicional          : 23 26 30 31 32 32
Declaracao           : 4
Expressao            : 7 14 15
INPUTVar             : 55 57
ListaAtributos       : 49 51
ListaCondicionais    : 22 24 25 26 40
Operador             : 14
OperadorCondicional  : 32
OperadorLogico       : 26
Programa             : 0
Var                  : 9 14 29 44 56 57

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . BlocosCodigo
    (2) BlocosCodigo -> . Codigo
    (3) BlocosCodigo -> . BlocosCodigo Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Programa                       shift and go to state 1
    BlocosCodigo                   shift and go to state 2
    Codigo                         shift and go to state 3
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> BlocosCodigo .
    (3) BlocosCodigo -> BlocosCodigo . Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    $end            reduce using rule 1 (Programa -> BlocosCodigo .)
    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Codigo                         shift and go to state 21
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 3

    (2) BlocosCodigo -> Codigo .

    INT             reduce using rule 2 (BlocosCodigo -> Codigo .)
    ID              reduce using rule 2 (BlocosCodigo -> Codigo .)
    IF              reduce using rule 2 (BlocosCodigo -> Codigo .)
    WHILE           reduce using rule 2 (BlocosCodigo -> Codigo .)
    STDOUT          reduce using rule 2 (BlocosCodigo -> Codigo .)
    COMMENT         reduce using rule 2 (BlocosCodigo -> Codigo .)
    DEFINE          reduce using rule 2 (BlocosCodigo -> Codigo .)
    CALL            reduce using rule 2 (BlocosCodigo -> Codigo .)
    $end            reduce using rule 2 (BlocosCodigo -> Codigo .)
    }               reduce using rule 2 (BlocosCodigo -> Codigo .)


state 4

    (4) Codigo -> Declaracao .

    INT             reduce using rule 4 (Codigo -> Declaracao .)
    ID              reduce using rule 4 (Codigo -> Declaracao .)
    IF              reduce using rule 4 (Codigo -> Declaracao .)
    WHILE           reduce using rule 4 (Codigo -> Declaracao .)
    STDOUT          reduce using rule 4 (Codigo -> Declaracao .)
    COMMENT         reduce using rule 4 (Codigo -> Declaracao .)
    DEFINE          reduce using rule 4 (Codigo -> Declaracao .)
    CALL            reduce using rule 4 (Codigo -> Declaracao .)
    $end            reduce using rule 4 (Codigo -> Declaracao .)
    }               reduce using rule 4 (Codigo -> Declaracao .)


state 5

    (6) Codigo -> Atribuicao .

    INT             reduce using rule 6 (Codigo -> Atribuicao .)
    ID              reduce using rule 6 (Codigo -> Atribuicao .)
    IF              reduce using rule 6 (Codigo -> Atribuicao .)
    WHILE           reduce using rule 6 (Codigo -> Atribuicao .)
    STDOUT          reduce using rule 6 (Codigo -> Atribuicao .)
    COMMENT         reduce using rule 6 (Codigo -> Atribuicao .)
    DEFINE          reduce using rule 6 (Codigo -> Atribuicao .)
    CALL            reduce using rule 6 (Codigo -> Atribuicao .)
    $end            reduce using rule 6 (Codigo -> Atribuicao .)
    }               reduce using rule 6 (Codigo -> Atribuicao .)


state 6

    (21) Codigo -> BlocoIF .

    INT             reduce using rule 21 (Codigo -> BlocoIF .)
    ID              reduce using rule 21 (Codigo -> BlocoIF .)
    IF              reduce using rule 21 (Codigo -> BlocoIF .)
    WHILE           reduce using rule 21 (Codigo -> BlocoIF .)
    STDOUT          reduce using rule 21 (Codigo -> BlocoIF .)
    COMMENT         reduce using rule 21 (Codigo -> BlocoIF .)
    DEFINE          reduce using rule 21 (Codigo -> BlocoIF .)
    CALL            reduce using rule 21 (Codigo -> BlocoIF .)
    $end            reduce using rule 21 (Codigo -> BlocoIF .)
    }               reduce using rule 21 (Codigo -> BlocoIF .)


state 7

    (39) Codigo -> BlocoWhileDo .

    INT             reduce using rule 39 (Codigo -> BlocoWhileDo .)
    ID              reduce using rule 39 (Codigo -> BlocoWhileDo .)
    IF              reduce using rule 39 (Codigo -> BlocoWhileDo .)
    WHILE           reduce using rule 39 (Codigo -> BlocoWhileDo .)
    STDOUT          reduce using rule 39 (Codigo -> BlocoWhileDo .)
    COMMENT         reduce using rule 39 (Codigo -> BlocoWhileDo .)
    DEFINE          reduce using rule 39 (Codigo -> BlocoWhileDo .)
    CALL            reduce using rule 39 (Codigo -> BlocoWhileDo .)
    $end            reduce using rule 39 (Codigo -> BlocoWhileDo .)
    }               reduce using rule 39 (Codigo -> BlocoWhileDo .)


state 8

    (41) Codigo -> BlocoLerSTDIN .

    INT             reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    ID              reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    IF              reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    WHILE           reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    STDOUT          reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    COMMENT         reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    DEFINE          reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    CALL            reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    $end            reduce using rule 41 (Codigo -> BlocoLerSTDIN .)
    }               reduce using rule 41 (Codigo -> BlocoLerSTDIN .)


state 9

    (43) Codigo -> Bloco_EscreverSTDOUT .

    INT             reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    ID              reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    IF              reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    WHILE           reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    STDOUT          reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    COMMENT         reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    DEFINE          reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    CALL            reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    $end            reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)
    }               reduce using rule 43 (Codigo -> Bloco_EscreverSTDOUT .)


state 10

    (45) Codigo -> Bloco_Comentario .

    INT             reduce using rule 45 (Codigo -> Bloco_Comentario .)
    ID              reduce using rule 45 (Codigo -> Bloco_Comentario .)
    IF              reduce using rule 45 (Codigo -> Bloco_Comentario .)
    WHILE           reduce using rule 45 (Codigo -> Bloco_Comentario .)
    STDOUT          reduce using rule 45 (Codigo -> Bloco_Comentario .)
    COMMENT         reduce using rule 45 (Codigo -> Bloco_Comentario .)
    DEFINE          reduce using rule 45 (Codigo -> Bloco_Comentario .)
    CALL            reduce using rule 45 (Codigo -> Bloco_Comentario .)
    $end            reduce using rule 45 (Codigo -> Bloco_Comentario .)
    }               reduce using rule 45 (Codigo -> Bloco_Comentario .)


state 11

    (47) Codigo -> Bloco_DEFINEFUNC .

    INT             reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    ID              reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    IF              reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    WHILE           reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    STDOUT          reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    COMMENT         reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    DEFINE          reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    CALL            reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    $end            reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)
    }               reduce using rule 47 (Codigo -> Bloco_DEFINEFUNC .)


state 12

    (53) Codigo -> Bloco_CALLFUNC .

    INT             reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    ID              reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    IF              reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    WHILE           reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    STDOUT          reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    COMMENT         reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    DEFINE          reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    CALL            reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    $end            reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)
    }               reduce using rule 53 (Codigo -> Bloco_CALLFUNC .)


state 13

    (5) Declaracao -> INT . ID ;

    ID              shift and go to state 22


state 14

    (7) Atribuicao -> ID . = Expressao ;
    (8) Atribuicao -> ID . = Bloco_CALLFUNC
    (42) BlocoLerSTDIN -> ID . = STDIN ( ) ;

    =               shift and go to state 23


state 15

    (22) BlocoIF -> IF . ( ListaCondicionais ) { BlocosCodigo }

    (               shift and go to state 24


state 16

    (40) BlocoWhileDo -> WHILE . ( ListaCondicionais ) DO { BlocosCodigo }

    (               shift and go to state 25


state 17

    (44) Bloco_EscreverSTDOUT -> STDOUT . ( Var ) ;

    (               shift and go to state 26


state 18

    (46) Bloco_Comentario -> COMMENT .

    INT             reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    ID              reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    IF              reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    WHILE           reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    STDOUT          reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    COMMENT         reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    DEFINE          reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    CALL            reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    $end            reduce using rule 46 (Bloco_Comentario -> COMMENT .)
    }               reduce using rule 46 (Bloco_Comentario -> COMMENT .)


state 19

    (48) Bloco_DEFINEFUNC -> DEFINE . FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> DEFINE . FUNC ( ListaAtributos ) { BlocosCodigo }

    FUNC            shift and go to state 27


state 20

    (54) Bloco_CALLFUNC -> CALL . FUNC ( ) ;
    (55) Bloco_CALLFUNC -> CALL . FUNC ( INPUTVar ) ;

    FUNC            shift and go to state 28


state 21

    (3) BlocosCodigo -> BlocosCodigo Codigo .

    INT             reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    ID              reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    IF              reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    WHILE           reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    STDOUT          reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    COMMENT         reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    DEFINE          reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    CALL            reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    $end            reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)
    }               reduce using rule 3 (BlocosCodigo -> BlocosCodigo Codigo .)


state 22

    (5) Declaracao -> INT ID . ;

    ;               shift and go to state 29


state 23

    (7) Atribuicao -> ID = . Expressao ;
    (8) Atribuicao -> ID = . Bloco_CALLFUNC
    (42) BlocoLerSTDIN -> ID = . STDIN ( ) ;
    (9) Expressao -> . Var
    (14) Expressao -> . Expressao Operador Var
    (15) Expressao -> . ( Expressao )
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    STDIN           shift and go to state 33
    (               shift and go to state 34
    CALL            shift and go to state 20
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Expressao                      shift and go to state 31
    Bloco_CALLFUNC                 shift and go to state 32
    Var                            shift and go to state 35

state 24

    (22) BlocoIF -> IF ( . ListaCondicionais ) { BlocosCodigo }
    (23) ListaCondicionais -> . Condicional
    (24) ListaCondicionais -> . ( ListaCondicionais )
    (25) ListaCondicionais -> . ! ( ListaCondicionais )
    (26) ListaCondicionais -> . ListaCondicionais OperadorLogico Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    (               shift and go to state 39
    !               shift and go to state 42
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    ListaCondicionais              shift and go to state 40
    Condicional                    shift and go to state 41
    Var                            shift and go to state 43

state 25

    (40) BlocoWhileDo -> WHILE ( . ListaCondicionais ) DO { BlocosCodigo }
    (23) ListaCondicionais -> . Condicional
    (24) ListaCondicionais -> . ( ListaCondicionais )
    (25) ListaCondicionais -> . ! ( ListaCondicionais )
    (26) ListaCondicionais -> . ListaCondicionais OperadorLogico Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    (               shift and go to state 39
    !               shift and go to state 42
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    ListaCondicionais              shift and go to state 44
    Condicional                    shift and go to state 41
    Var                            shift and go to state 43

state 26

    (44) Bloco_EscreverSTDOUT -> STDOUT ( . Var ) ;
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Var                            shift and go to state 45

state 27

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC . ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> DEFINE FUNC . ( ListaAtributos ) { BlocosCodigo }

    (               shift and go to state 46


state 28

    (54) Bloco_CALLFUNC -> CALL FUNC . ( ) ;
    (55) Bloco_CALLFUNC -> CALL FUNC . ( INPUTVar ) ;

    (               shift and go to state 47


state 29

    (5) Declaracao -> INT ID ; .

    INT             reduce using rule 5 (Declaracao -> INT ID ; .)
    ID              reduce using rule 5 (Declaracao -> INT ID ; .)
    IF              reduce using rule 5 (Declaracao -> INT ID ; .)
    WHILE           reduce using rule 5 (Declaracao -> INT ID ; .)
    STDOUT          reduce using rule 5 (Declaracao -> INT ID ; .)
    COMMENT         reduce using rule 5 (Declaracao -> INT ID ; .)
    DEFINE          reduce using rule 5 (Declaracao -> INT ID ; .)
    CALL            reduce using rule 5 (Declaracao -> INT ID ; .)
    $end            reduce using rule 5 (Declaracao -> INT ID ; .)
    }               reduce using rule 5 (Declaracao -> INT ID ; .)


state 30

    (11) Var -> ID .

    ;               reduce using rule 11 (Var -> ID .)
    +               reduce using rule 11 (Var -> ID .)
    -               reduce using rule 11 (Var -> ID .)
    *               reduce using rule 11 (Var -> ID .)
    /               reduce using rule 11 (Var -> ID .)
    %               reduce using rule 11 (Var -> ID .)
    >               reduce using rule 11 (Var -> ID .)
    BIGEQUAL        reduce using rule 11 (Var -> ID .)
    <               reduce using rule 11 (Var -> ID .)
    LESSEREQUAL     reduce using rule 11 (Var -> ID .)
    EQUALS          reduce using rule 11 (Var -> ID .)
    NOTEQUALS       reduce using rule 11 (Var -> ID .)
    )               reduce using rule 11 (Var -> ID .)
    AND             reduce using rule 11 (Var -> ID .)
    OR              reduce using rule 11 (Var -> ID .)
    ,               reduce using rule 11 (Var -> ID .)


state 31

    (7) Atribuicao -> ID = Expressao . ;
    (14) Expressao -> Expressao . Operador Var
    (16) Operador -> . +
    (17) Operador -> . -
    (18) Operador -> . *
    (19) Operador -> . /
    (20) Operador -> . %

    ;               shift and go to state 48
    +               shift and go to state 50
    -               shift and go to state 51
    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 54

    Operador                       shift and go to state 49

state 32

    (8) Atribuicao -> ID = Bloco_CALLFUNC .

    INT             reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    ID              reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    IF              reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    WHILE           reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    STDOUT          reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    COMMENT         reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    DEFINE          reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    CALL            reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    $end            reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)
    }               reduce using rule 8 (Atribuicao -> ID = Bloco_CALLFUNC .)


state 33

    (42) BlocoLerSTDIN -> ID = STDIN . ( ) ;

    (               shift and go to state 55


state 34

    (15) Expressao -> ( . Expressao )
    (9) Expressao -> . Var
    (14) Expressao -> . Expressao Operador Var
    (15) Expressao -> . ( Expressao )
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    (               shift and go to state 34
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Expressao                      shift and go to state 56
    Var                            shift and go to state 35

state 35

    (9) Expressao -> Var .

    ;               reduce using rule 9 (Expressao -> Var .)
    +               reduce using rule 9 (Expressao -> Var .)
    -               reduce using rule 9 (Expressao -> Var .)
    *               reduce using rule 9 (Expressao -> Var .)
    /               reduce using rule 9 (Expressao -> Var .)
    %               reduce using rule 9 (Expressao -> Var .)
    )               reduce using rule 9 (Expressao -> Var .)


state 36

    (10) Var -> NUM .

    ;               reduce using rule 10 (Var -> NUM .)
    +               reduce using rule 10 (Var -> NUM .)
    -               reduce using rule 10 (Var -> NUM .)
    *               reduce using rule 10 (Var -> NUM .)
    /               reduce using rule 10 (Var -> NUM .)
    %               reduce using rule 10 (Var -> NUM .)
    >               reduce using rule 10 (Var -> NUM .)
    BIGEQUAL        reduce using rule 10 (Var -> NUM .)
    <               reduce using rule 10 (Var -> NUM .)
    LESSEREQUAL     reduce using rule 10 (Var -> NUM .)
    EQUALS          reduce using rule 10 (Var -> NUM .)
    NOTEQUALS       reduce using rule 10 (Var -> NUM .)
    )               reduce using rule 10 (Var -> NUM .)
    AND             reduce using rule 10 (Var -> NUM .)
    OR              reduce using rule 10 (Var -> NUM .)
    ,               reduce using rule 10 (Var -> NUM .)


state 37

    (12) Var -> TRUE .

    ;               reduce using rule 12 (Var -> TRUE .)
    +               reduce using rule 12 (Var -> TRUE .)
    -               reduce using rule 12 (Var -> TRUE .)
    *               reduce using rule 12 (Var -> TRUE .)
    /               reduce using rule 12 (Var -> TRUE .)
    %               reduce using rule 12 (Var -> TRUE .)
    >               reduce using rule 12 (Var -> TRUE .)
    BIGEQUAL        reduce using rule 12 (Var -> TRUE .)
    <               reduce using rule 12 (Var -> TRUE .)
    LESSEREQUAL     reduce using rule 12 (Var -> TRUE .)
    EQUALS          reduce using rule 12 (Var -> TRUE .)
    NOTEQUALS       reduce using rule 12 (Var -> TRUE .)
    )               reduce using rule 12 (Var -> TRUE .)
    AND             reduce using rule 12 (Var -> TRUE .)
    OR              reduce using rule 12 (Var -> TRUE .)
    ,               reduce using rule 12 (Var -> TRUE .)


state 38

    (13) Var -> FALSE .

    ;               reduce using rule 13 (Var -> FALSE .)
    +               reduce using rule 13 (Var -> FALSE .)
    -               reduce using rule 13 (Var -> FALSE .)
    *               reduce using rule 13 (Var -> FALSE .)
    /               reduce using rule 13 (Var -> FALSE .)
    %               reduce using rule 13 (Var -> FALSE .)
    >               reduce using rule 13 (Var -> FALSE .)
    BIGEQUAL        reduce using rule 13 (Var -> FALSE .)
    <               reduce using rule 13 (Var -> FALSE .)
    LESSEREQUAL     reduce using rule 13 (Var -> FALSE .)
    EQUALS          reduce using rule 13 (Var -> FALSE .)
    NOTEQUALS       reduce using rule 13 (Var -> FALSE .)
    )               reduce using rule 13 (Var -> FALSE .)
    AND             reduce using rule 13 (Var -> FALSE .)
    OR              reduce using rule 13 (Var -> FALSE .)
    ,               reduce using rule 13 (Var -> FALSE .)


state 39

    (24) ListaCondicionais -> ( . ListaCondicionais )
    (31) Condicional -> ( . Condicional )
    (23) ListaCondicionais -> . Condicional
    (24) ListaCondicionais -> . ( ListaCondicionais )
    (25) ListaCondicionais -> . ! ( ListaCondicionais )
    (26) ListaCondicionais -> . ListaCondicionais OperadorLogico Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    (               shift and go to state 39
    !               shift and go to state 42
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    ListaCondicionais              shift and go to state 57
    Condicional                    shift and go to state 58
    Var                            shift and go to state 43

state 40

    (22) BlocoIF -> IF ( ListaCondicionais . ) { BlocosCodigo }
    (26) ListaCondicionais -> ListaCondicionais . OperadorLogico Condicional
    (27) OperadorLogico -> . AND
    (28) OperadorLogico -> . OR

    )               shift and go to state 59
    AND             shift and go to state 61
    OR              shift and go to state 62

    OperadorLogico                 shift and go to state 60

state 41

    (23) ListaCondicionais -> Condicional .
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

    )               reduce using rule 23 (ListaCondicionais -> Condicional .)
    AND             reduce using rule 23 (ListaCondicionais -> Condicional .)
    OR              reduce using rule 23 (ListaCondicionais -> Condicional .)
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

    OperadorCondicional            shift and go to state 63

state 42

    (25) ListaCondicionais -> ! . ( ListaCondicionais )
    (30) Condicional -> ! . ( Condicional )

    (               shift and go to state 70


state 43

    (29) Condicional -> Var .

    >               reduce using rule 29 (Condicional -> Var .)
    BIGEQUAL        reduce using rule 29 (Condicional -> Var .)
    <               reduce using rule 29 (Condicional -> Var .)
    LESSEREQUAL     reduce using rule 29 (Condicional -> Var .)
    EQUALS          reduce using rule 29 (Condicional -> Var .)
    NOTEQUALS       reduce using rule 29 (Condicional -> Var .)
    )               reduce using rule 29 (Condicional -> Var .)
    AND             reduce using rule 29 (Condicional -> Var .)
    OR              reduce using rule 29 (Condicional -> Var .)


state 44

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais . ) DO { BlocosCodigo }
    (26) ListaCondicionais -> ListaCondicionais . OperadorLogico Condicional
    (27) OperadorLogico -> . AND
    (28) OperadorLogico -> . OR

    )               shift and go to state 71
    AND             shift and go to state 61
    OR              shift and go to state 62

    OperadorLogico                 shift and go to state 60

state 45

    (44) Bloco_EscreverSTDOUT -> STDOUT ( Var . ) ;

    )               shift and go to state 72


state 46

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC ( . ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( . ListaAtributos ) { BlocosCodigo }
    (50) ListaAtributos -> . Atributo
    (51) ListaAtributos -> . ListaAtributos , Atributo
    (52) Atributo -> . INT

    )               shift and go to state 73
    INT             shift and go to state 76

    ListaAtributos                 shift and go to state 74
    Atributo                       shift and go to state 75

state 47

    (54) Bloco_CALLFUNC -> CALL FUNC ( . ) ;
    (55) Bloco_CALLFUNC -> CALL FUNC ( . INPUTVar ) ;
    (56) INPUTVar -> . Var
    (57) INPUTVar -> . INPUTVar , Var
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    )               shift and go to state 77
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    INPUTVar                       shift and go to state 78
    Var                            shift and go to state 79

state 48

    (7) Atribuicao -> ID = Expressao ; .

    INT             reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    ID              reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    IF              reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    WHILE           reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    STDOUT          reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    COMMENT         reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    DEFINE          reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    CALL            reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    $end            reduce using rule 7 (Atribuicao -> ID = Expressao ; .)
    }               reduce using rule 7 (Atribuicao -> ID = Expressao ; .)


state 49

    (14) Expressao -> Expressao Operador . Var
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Var                            shift and go to state 80

state 50

    (16) Operador -> + .

    NUM             reduce using rule 16 (Operador -> + .)
    ID              reduce using rule 16 (Operador -> + .)
    TRUE            reduce using rule 16 (Operador -> + .)
    FALSE           reduce using rule 16 (Operador -> + .)


state 51

    (17) Operador -> - .

    NUM             reduce using rule 17 (Operador -> - .)
    ID              reduce using rule 17 (Operador -> - .)
    TRUE            reduce using rule 17 (Operador -> - .)
    FALSE           reduce using rule 17 (Operador -> - .)


state 52

    (18) Operador -> * .

    NUM             reduce using rule 18 (Operador -> * .)
    ID              reduce using rule 18 (Operador -> * .)
    TRUE            reduce using rule 18 (Operador -> * .)
    FALSE           reduce using rule 18 (Operador -> * .)


state 53

    (19) Operador -> / .

    NUM             reduce using rule 19 (Operador -> / .)
    ID              reduce using rule 19 (Operador -> / .)
    TRUE            reduce using rule 19 (Operador -> / .)
    FALSE           reduce using rule 19 (Operador -> / .)


state 54

    (20) Operador -> % .

    NUM             reduce using rule 20 (Operador -> % .)
    ID              reduce using rule 20 (Operador -> % .)
    TRUE            reduce using rule 20 (Operador -> % .)
    FALSE           reduce using rule 20 (Operador -> % .)


state 55

    (42) BlocoLerSTDIN -> ID = STDIN ( . ) ;

    )               shift and go to state 81


state 56

    (15) Expressao -> ( Expressao . )
    (14) Expressao -> Expressao . Operador Var
    (16) Operador -> . +
    (17) Operador -> . -
    (18) Operador -> . *
    (19) Operador -> . /
    (20) Operador -> . %

    )               shift and go to state 82
    +               shift and go to state 50
    -               shift and go to state 51
    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 54

    Operador                       shift and go to state 49

state 57

    (24) ListaCondicionais -> ( ListaCondicionais . )
    (26) ListaCondicionais -> ListaCondicionais . OperadorLogico Condicional
    (27) OperadorLogico -> . AND
    (28) OperadorLogico -> . OR

    )               shift and go to state 83
    AND             shift and go to state 61
    OR              shift and go to state 62

    OperadorLogico                 shift and go to state 60

state 58

    (31) Condicional -> ( Condicional . )
    (23) ListaCondicionais -> Condicional .
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 84
    AND             reduce using rule 23 (ListaCondicionais -> Condicional .)
    OR              reduce using rule 23 (ListaCondicionais -> Condicional .)
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

  ! )               [ reduce using rule 23 (ListaCondicionais -> Condicional .) ]

    OperadorCondicional            shift and go to state 63

state 59

    (22) BlocoIF -> IF ( ListaCondicionais ) . { BlocosCodigo }

    {               shift and go to state 85


state 60

    (26) ListaCondicionais -> ListaCondicionais OperadorLogico . Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    !               shift and go to state 87
    (               shift and go to state 88
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Condicional                    shift and go to state 86
    Var                            shift and go to state 43

state 61

    (27) OperadorLogico -> AND .

    !               reduce using rule 27 (OperadorLogico -> AND .)
    (               reduce using rule 27 (OperadorLogico -> AND .)
    NUM             reduce using rule 27 (OperadorLogico -> AND .)
    ID              reduce using rule 27 (OperadorLogico -> AND .)
    TRUE            reduce using rule 27 (OperadorLogico -> AND .)
    FALSE           reduce using rule 27 (OperadorLogico -> AND .)


state 62

    (28) OperadorLogico -> OR .

    !               reduce using rule 28 (OperadorLogico -> OR .)
    (               reduce using rule 28 (OperadorLogico -> OR .)
    NUM             reduce using rule 28 (OperadorLogico -> OR .)
    ID              reduce using rule 28 (OperadorLogico -> OR .)
    TRUE            reduce using rule 28 (OperadorLogico -> OR .)
    FALSE           reduce using rule 28 (OperadorLogico -> OR .)


state 63

    (32) Condicional -> Condicional OperadorCondicional . Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    !               shift and go to state 87
    (               shift and go to state 88
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Condicional                    shift and go to state 89
    Var                            shift and go to state 43

state 64

    (33) OperadorCondicional -> > .

    !               reduce using rule 33 (OperadorCondicional -> > .)
    (               reduce using rule 33 (OperadorCondicional -> > .)
    NUM             reduce using rule 33 (OperadorCondicional -> > .)
    ID              reduce using rule 33 (OperadorCondicional -> > .)
    TRUE            reduce using rule 33 (OperadorCondicional -> > .)
    FALSE           reduce using rule 33 (OperadorCondicional -> > .)


state 65

    (34) OperadorCondicional -> BIGEQUAL .

    !               reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)
    (               reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)
    NUM             reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)
    ID              reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)
    TRUE            reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)
    FALSE           reduce using rule 34 (OperadorCondicional -> BIGEQUAL .)


state 66

    (35) OperadorCondicional -> < .

    !               reduce using rule 35 (OperadorCondicional -> < .)
    (               reduce using rule 35 (OperadorCondicional -> < .)
    NUM             reduce using rule 35 (OperadorCondicional -> < .)
    ID              reduce using rule 35 (OperadorCondicional -> < .)
    TRUE            reduce using rule 35 (OperadorCondicional -> < .)
    FALSE           reduce using rule 35 (OperadorCondicional -> < .)


state 67

    (36) OperadorCondicional -> LESSEREQUAL .

    !               reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)
    (               reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)
    NUM             reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)
    ID              reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)
    TRUE            reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)
    FALSE           reduce using rule 36 (OperadorCondicional -> LESSEREQUAL .)


state 68

    (37) OperadorCondicional -> EQUALS .

    !               reduce using rule 37 (OperadorCondicional -> EQUALS .)
    (               reduce using rule 37 (OperadorCondicional -> EQUALS .)
    NUM             reduce using rule 37 (OperadorCondicional -> EQUALS .)
    ID              reduce using rule 37 (OperadorCondicional -> EQUALS .)
    TRUE            reduce using rule 37 (OperadorCondicional -> EQUALS .)
    FALSE           reduce using rule 37 (OperadorCondicional -> EQUALS .)


state 69

    (38) OperadorCondicional -> NOTEQUALS .

    !               reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)
    (               reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)
    NUM             reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)
    ID              reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)
    TRUE            reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)
    FALSE           reduce using rule 38 (OperadorCondicional -> NOTEQUALS .)


state 70

    (25) ListaCondicionais -> ! ( . ListaCondicionais )
    (30) Condicional -> ! ( . Condicional )
    (23) ListaCondicionais -> . Condicional
    (24) ListaCondicionais -> . ( ListaCondicionais )
    (25) ListaCondicionais -> . ! ( ListaCondicionais )
    (26) ListaCondicionais -> . ListaCondicionais OperadorLogico Condicional
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    (               shift and go to state 39
    !               shift and go to state 42
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    ListaCondicionais              shift and go to state 90
    Condicional                    shift and go to state 91
    Var                            shift and go to state 43

state 71

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais ) . DO { BlocosCodigo }

    DO              shift and go to state 92


state 72

    (44) Bloco_EscreverSTDOUT -> STDOUT ( Var ) . ;

    ;               shift and go to state 93


state 73

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC ( ) . { BlocosCodigo }

    {               shift and go to state 94


state 74

    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos . ) { BlocosCodigo }
    (51) ListaAtributos -> ListaAtributos . , Atributo

    )               shift and go to state 95
    ,               shift and go to state 96


state 75

    (50) ListaAtributos -> Atributo .

    )               reduce using rule 50 (ListaAtributos -> Atributo .)
    ,               reduce using rule 50 (ListaAtributos -> Atributo .)


state 76

    (52) Atributo -> INT .

    )               reduce using rule 52 (Atributo -> INT .)
    ,               reduce using rule 52 (Atributo -> INT .)


state 77

    (54) Bloco_CALLFUNC -> CALL FUNC ( ) . ;

    ;               shift and go to state 97


state 78

    (55) Bloco_CALLFUNC -> CALL FUNC ( INPUTVar . ) ;
    (57) INPUTVar -> INPUTVar . , Var

    )               shift and go to state 98
    ,               shift and go to state 99


state 79

    (56) INPUTVar -> Var .

    )               reduce using rule 56 (INPUTVar -> Var .)
    ,               reduce using rule 56 (INPUTVar -> Var .)


state 80

    (14) Expressao -> Expressao Operador Var .

    ;               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    +               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    -               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    *               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    /               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    %               reduce using rule 14 (Expressao -> Expressao Operador Var .)
    )               reduce using rule 14 (Expressao -> Expressao Operador Var .)


state 81

    (42) BlocoLerSTDIN -> ID = STDIN ( ) . ;

    ;               shift and go to state 100


state 82

    (15) Expressao -> ( Expressao ) .

    ;               reduce using rule 15 (Expressao -> ( Expressao ) .)
    +               reduce using rule 15 (Expressao -> ( Expressao ) .)
    -               reduce using rule 15 (Expressao -> ( Expressao ) .)
    *               reduce using rule 15 (Expressao -> ( Expressao ) .)
    /               reduce using rule 15 (Expressao -> ( Expressao ) .)
    %               reduce using rule 15 (Expressao -> ( Expressao ) .)
    )               reduce using rule 15 (Expressao -> ( Expressao ) .)


state 83

    (24) ListaCondicionais -> ( ListaCondicionais ) .

    )               reduce using rule 24 (ListaCondicionais -> ( ListaCondicionais ) .)
    AND             reduce using rule 24 (ListaCondicionais -> ( ListaCondicionais ) .)
    OR              reduce using rule 24 (ListaCondicionais -> ( ListaCondicionais ) .)


state 84

    (31) Condicional -> ( Condicional ) .

    >               reduce using rule 31 (Condicional -> ( Condicional ) .)
    BIGEQUAL        reduce using rule 31 (Condicional -> ( Condicional ) .)
    <               reduce using rule 31 (Condicional -> ( Condicional ) .)
    LESSEREQUAL     reduce using rule 31 (Condicional -> ( Condicional ) .)
    EQUALS          reduce using rule 31 (Condicional -> ( Condicional ) .)
    NOTEQUALS       reduce using rule 31 (Condicional -> ( Condicional ) .)
    )               reduce using rule 31 (Condicional -> ( Condicional ) .)
    AND             reduce using rule 31 (Condicional -> ( Condicional ) .)
    OR              reduce using rule 31 (Condicional -> ( Condicional ) .)


state 85

    (22) BlocoIF -> IF ( ListaCondicionais ) { . BlocosCodigo }
    (2) BlocosCodigo -> . Codigo
    (3) BlocosCodigo -> . BlocosCodigo Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    BlocosCodigo                   shift and go to state 101
    Codigo                         shift and go to state 3
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 86

    (26) ListaCondicionais -> ListaCondicionais OperadorLogico Condicional .
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

    )               reduce using rule 26 (ListaCondicionais -> ListaCondicionais OperadorLogico Condicional .)
    AND             reduce using rule 26 (ListaCondicionais -> ListaCondicionais OperadorLogico Condicional .)
    OR              reduce using rule 26 (ListaCondicionais -> ListaCondicionais OperadorLogico Condicional .)
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

    OperadorCondicional            shift and go to state 63

state 87

    (30) Condicional -> ! . ( Condicional )

    (               shift and go to state 102


state 88

    (31) Condicional -> ( . Condicional )
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    !               shift and go to state 87
    (               shift and go to state 88
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Condicional                    shift and go to state 103
    Var                            shift and go to state 43

state 89

    (32) Condicional -> Condicional OperadorCondicional Condicional .
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for BIGEQUAL resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for LESSEREQUAL resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
    )               reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .)
    AND             reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .)
    OR              reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .)
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

  ! >               [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]
  ! BIGEQUAL        [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]
  ! <               [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]
  ! LESSEREQUAL     [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]
  ! EQUALS          [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]
  ! NOTEQUALS       [ reduce using rule 32 (Condicional -> Condicional OperadorCondicional Condicional .) ]

    OperadorCondicional            shift and go to state 63

state 90

    (25) ListaCondicionais -> ! ( ListaCondicionais . )
    (26) ListaCondicionais -> ListaCondicionais . OperadorLogico Condicional
    (27) OperadorLogico -> . AND
    (28) OperadorLogico -> . OR

    )               shift and go to state 104
    AND             shift and go to state 61
    OR              shift and go to state 62

    OperadorLogico                 shift and go to state 60

state 91

    (30) Condicional -> ! ( Condicional . )
    (23) ListaCondicionais -> Condicional .
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 105
    AND             reduce using rule 23 (ListaCondicionais -> Condicional .)
    OR              reduce using rule 23 (ListaCondicionais -> Condicional .)
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

  ! )               [ reduce using rule 23 (ListaCondicionais -> Condicional .) ]

    OperadorCondicional            shift and go to state 63

state 92

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais ) DO . { BlocosCodigo }

    {               shift and go to state 106


state 93

    (44) Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .

    INT             reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    ID              reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    IF              reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    WHILE           reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    STDOUT          reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    COMMENT         reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    DEFINE          reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    CALL            reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    $end            reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)
    }               reduce using rule 44 (Bloco_EscreverSTDOUT -> STDOUT ( Var ) ; .)


state 94

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { . BlocosCodigo }
    (2) BlocosCodigo -> . Codigo
    (3) BlocosCodigo -> . BlocosCodigo Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    BlocosCodigo                   shift and go to state 107
    Codigo                         shift and go to state 3
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 95

    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) . { BlocosCodigo }

    {               shift and go to state 108


state 96

    (51) ListaAtributos -> ListaAtributos , . Atributo
    (52) Atributo -> . INT

    INT             shift and go to state 76

    Atributo                       shift and go to state 109

state 97

    (54) Bloco_CALLFUNC -> CALL FUNC ( ) ; .

    INT             reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    ID              reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    IF              reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    WHILE           reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    STDOUT          reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    COMMENT         reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    DEFINE          reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    CALL            reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    $end            reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)
    }               reduce using rule 54 (Bloco_CALLFUNC -> CALL FUNC ( ) ; .)


state 98

    (55) Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) . ;

    ;               shift and go to state 110


state 99

    (57) INPUTVar -> INPUTVar , . Var
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Var                            shift and go to state 111

state 100

    (42) BlocoLerSTDIN -> ID = STDIN ( ) ; .

    INT             reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    ID              reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    IF              reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    WHILE           reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    STDOUT          reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    COMMENT         reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    DEFINE          reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    CALL            reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    $end            reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)
    }               reduce using rule 42 (BlocoLerSTDIN -> ID = STDIN ( ) ; .)


state 101

    (22) BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo . }
    (3) BlocosCodigo -> BlocosCodigo . Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    }               shift and go to state 112
    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Codigo                         shift and go to state 21
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 102

    (30) Condicional -> ! ( . Condicional )
    (29) Condicional -> . Var
    (30) Condicional -> . ! ( Condicional )
    (31) Condicional -> . ( Condicional )
    (32) Condicional -> . Condicional OperadorCondicional Condicional
    (10) Var -> . NUM
    (11) Var -> . ID
    (12) Var -> . TRUE
    (13) Var -> . FALSE

    !               shift and go to state 87
    (               shift and go to state 88
    NUM             shift and go to state 36
    ID              shift and go to state 30
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    Condicional                    shift and go to state 113
    Var                            shift and go to state 43

state 103

    (31) Condicional -> ( Condicional . )
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

    )               shift and go to state 84
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

    OperadorCondicional            shift and go to state 63

state 104

    (25) ListaCondicionais -> ! ( ListaCondicionais ) .

    )               reduce using rule 25 (ListaCondicionais -> ! ( ListaCondicionais ) .)
    AND             reduce using rule 25 (ListaCondicionais -> ! ( ListaCondicionais ) .)
    OR              reduce using rule 25 (ListaCondicionais -> ! ( ListaCondicionais ) .)


state 105

    (30) Condicional -> ! ( Condicional ) .

    >               reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    BIGEQUAL        reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    <               reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    LESSEREQUAL     reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    EQUALS          reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    NOTEQUALS       reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    )               reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    AND             reduce using rule 30 (Condicional -> ! ( Condicional ) .)
    OR              reduce using rule 30 (Condicional -> ! ( Condicional ) .)


state 106

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { . BlocosCodigo }
    (2) BlocosCodigo -> . Codigo
    (3) BlocosCodigo -> . BlocosCodigo Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    BlocosCodigo                   shift and go to state 114
    Codigo                         shift and go to state 3
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 107

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo . }
    (3) BlocosCodigo -> BlocosCodigo . Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    }               shift and go to state 115
    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Codigo                         shift and go to state 21
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 108

    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { . BlocosCodigo }
    (2) BlocosCodigo -> . Codigo
    (3) BlocosCodigo -> . BlocosCodigo Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    BlocosCodigo                   shift and go to state 116
    Codigo                         shift and go to state 3
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 109

    (51) ListaAtributos -> ListaAtributos , Atributo .

    )               reduce using rule 51 (ListaAtributos -> ListaAtributos , Atributo .)
    ,               reduce using rule 51 (ListaAtributos -> ListaAtributos , Atributo .)


state 110

    (55) Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .

    INT             reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    ID              reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    IF              reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    WHILE           reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    STDOUT          reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    COMMENT         reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    DEFINE          reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    CALL            reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    $end            reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)
    }               reduce using rule 55 (Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ; .)


state 111

    (57) INPUTVar -> INPUTVar , Var .

    )               reduce using rule 57 (INPUTVar -> INPUTVar , Var .)
    ,               reduce using rule 57 (INPUTVar -> INPUTVar , Var .)


state 112

    (22) BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .

    INT             reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    ID              reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    IF              reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    WHILE           reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    STDOUT          reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    COMMENT         reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    DEFINE          reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    CALL            reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    $end            reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)
    }               reduce using rule 22 (BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo } .)


state 113

    (30) Condicional -> ! ( Condicional . )
    (32) Condicional -> Condicional . OperadorCondicional Condicional
    (33) OperadorCondicional -> . >
    (34) OperadorCondicional -> . BIGEQUAL
    (35) OperadorCondicional -> . <
    (36) OperadorCondicional -> . LESSEREQUAL
    (37) OperadorCondicional -> . EQUALS
    (38) OperadorCondicional -> . NOTEQUALS

    )               shift and go to state 105
    >               shift and go to state 64
    BIGEQUAL        shift and go to state 65
    <               shift and go to state 66
    LESSEREQUAL     shift and go to state 67
    EQUALS          shift and go to state 68
    NOTEQUALS       shift and go to state 69

    OperadorCondicional            shift and go to state 63

state 114

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo . }
    (3) BlocosCodigo -> BlocosCodigo . Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    }               shift and go to state 117
    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Codigo                         shift and go to state 21
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 115

    (48) Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .

    INT             reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    ID              reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    IF              reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    WHILE           reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    STDOUT          reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    COMMENT         reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    DEFINE          reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    CALL            reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    $end            reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)
    }               reduce using rule 48 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo } .)


state 116

    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo . }
    (3) BlocosCodigo -> BlocosCodigo . Codigo
    (4) Codigo -> . Declaracao
    (6) Codigo -> . Atribuicao
    (21) Codigo -> . BlocoIF
    (39) Codigo -> . BlocoWhileDo
    (41) Codigo -> . BlocoLerSTDIN
    (43) Codigo -> . Bloco_EscreverSTDOUT
    (45) Codigo -> . Bloco_Comentario
    (47) Codigo -> . Bloco_DEFINEFUNC
    (53) Codigo -> . Bloco_CALLFUNC
    (5) Declaracao -> . INT ID ;
    (7) Atribuicao -> . ID = Expressao ;
    (8) Atribuicao -> . ID = Bloco_CALLFUNC
    (22) BlocoIF -> . IF ( ListaCondicionais ) { BlocosCodigo }
    (40) BlocoWhileDo -> . WHILE ( ListaCondicionais ) DO { BlocosCodigo }
    (42) BlocoLerSTDIN -> . ID = STDIN ( ) ;
    (44) Bloco_EscreverSTDOUT -> . STDOUT ( Var ) ;
    (46) Bloco_Comentario -> . COMMENT
    (48) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ) { BlocosCodigo }
    (49) Bloco_DEFINEFUNC -> . DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }
    (54) Bloco_CALLFUNC -> . CALL FUNC ( ) ;
    (55) Bloco_CALLFUNC -> . CALL FUNC ( INPUTVar ) ;

    }               shift and go to state 118
    INT             shift and go to state 13
    ID              shift and go to state 14
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    STDOUT          shift and go to state 17
    COMMENT         shift and go to state 18
    DEFINE          shift and go to state 19
    CALL            shift and go to state 20

    Codigo                         shift and go to state 21
    Declaracao                     shift and go to state 4
    Atribuicao                     shift and go to state 5
    BlocoIF                        shift and go to state 6
    BlocoWhileDo                   shift and go to state 7
    BlocoLerSTDIN                  shift and go to state 8
    Bloco_EscreverSTDOUT           shift and go to state 9
    Bloco_Comentario               shift and go to state 10
    Bloco_DEFINEFUNC               shift and go to state 11
    Bloco_CALLFUNC                 shift and go to state 12

state 117

    (40) BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .

    INT             reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    ID              reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    IF              reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    WHILE           reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    STDOUT          reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    COMMENT         reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    DEFINE          reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    CALL            reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    $end            reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)
    }               reduce using rule 40 (BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo } .)


state 118

    (49) Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .

    INT             reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    ID              reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    IF              reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    WHILE           reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    STDOUT          reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    COMMENT         reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    DEFINE          reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    CALL            reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    $end            reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)
    }               reduce using rule 49 (Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ) in state 58 resolved as shift
WARNING: shift/reduce conflict for > in state 89 resolved as shift
WARNING: shift/reduce conflict for BIGEQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for < in state 89 resolved as shift
WARNING: shift/reduce conflict for LESSEREQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 89 resolved as shift
WARNING: shift/reduce conflict for NOTEQUALS in state 89 resolved as shift
WARNING: shift/reduce conflict for ) in state 91 resolved as shift
