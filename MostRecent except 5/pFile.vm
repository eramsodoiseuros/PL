pushi 0
pushi 0
pushi 0
startread
atoi
storeg 0

pushg 0
pushi 1
sup
jz ELSE1
read
atoi
storeg 0

pushg 0
pushi 1
sub
storeg 0

While2:            
pushg 0
pushi 0
sup
jz EndOfWhile2
pushg 0
pushi 1
equal
jz ELSE3
read
atoi
storeg 1

pushg 1
pushg 0
inf
jz ELSE4
pushg 1
writei
jump ENDIFELSE4
	ELSE4:
pushg 0
writei
ENDIFELSE4:     
jump ENDIFELSE3
	ELSE3:
read
atoi
storeg 1

pushg 1
pushg 0
inf
jz ENDSimpleIF5
pushg 1
storeg 0

ENDSimpleIF5:       
ENDIFELSE3:     
pushg 0
pushi 1
sub
storeg 0

jump While2
EndOfWhile2:         
jump ENDIFELSE1
	ELSE1:
pushg 0
pushi 1
equal
jz ENDSimpleIF6
read
atoi
storeg 1

pushg 1
writei
ENDSimpleIF6:       
ENDIFELSE1:     
stoppushi 0
pushi 0
startread
atoi
pushg 0
pushi 1
sup
jz ELSE1
read
atoi
storeg 1

pushg 0
pushi 1
sub
storeg 0

While2:            
pushg 0
pushi 0
sup
jz EndOfWhile2
pushg 0
pushi 1
equal
jz ELSE3
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ELSE4
pushg 2
writei
jump ENDIFELSE4
	ELSE4:
pushg 1
writei
ENDIFELSE4:     
jump ENDIFELSE3
	ELSE3:
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ENDSimpleIF5
pushg 2
storeg 1

ENDSimpleIF5:       
ENDIFELSE3:     
pushg 0
pushi 1
sub
storeg 0

jump While2
EndOfWhile2:         
jump ENDIFELSE1
	ELSE1:
pushg 0
pushi 1
equal
jz ENDSimpleIF6
read
atoi
storeg 2

pushg 2
writei
ENDSimpleIF6:       
ENDIFELSE1:     
stoppushi 0
pushi 0
startread
atoi
pushg 0
pushi 1
sup
jz ELSE1
read
atoi
storeg 1

pushg 0
pushi 1
sub
storeg 0

While2:            
pushg 0
pushi 0
sup
jz EndOfWhile2
pushg 0
pushi 1
equal
jz ELSE3
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ELSE4
pushg 2
writei
jump ENDIFELSE4
	ELSE4:
pushg 1
writei
ENDIFELSE4:     
jump ENDIFELSE3
	ELSE3:
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ENDSimpleIF5
pushg 2
storeg 1

ENDSimpleIF5:       
ENDIFELSE3:     
pushg 0
pushi 1
sub
storeg 0

jump While2
EndOfWhile2:         
jump ENDIFELSE1
	ELSE1:
pushg 0
pushi 1
equal
jz ENDSimpleIF6
read
atoi
storeg 2

pushg 2
writei
ENDSimpleIF6:       
ENDIFELSE1:     
stoppushi 0
pushi 0
pushi 0
startread
atoi
storeg 0

pushg 0
pushi 1
sup
jz ELSE1
read
atoi
storeg 1

pushg 0
pushi 1
sub
storeg 0

While2:            
pushg 0
pushi 0
sup
jz EndOfWhile2
pushg 0
pushi 1
equal
jz ELSE3
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ELSE4
pushg 2
writei
jump ENDIFELSE4
	ELSE4:
pushg 1
writei
ENDIFELSE4:     
jump ENDIFELSE3
	ELSE3:
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ENDSimpleIF5
pushg 2
storeg 1

ENDSimpleIF5:       
ENDIFELSE3:     
pushg 0
pushi 1
sub
storeg 0

jump While2
EndOfWhile2:         
jump ENDIFELSE1
	ELSE1:
pushg 0
pushi 1
equal
jz ENDSimpleIF6
read
atoi
storeg 2

pushg 2
writei
ENDSimpleIF6:       
ENDIFELSE1:     
stoppushi 0
pushi 0
pushi 0
startread
atoi
storeg 0

pushg 0
pushi 1
sup
jz ELSE1
read
atoi
storeg 1

pushg 0
pushi 1
sub
storeg 0

While2:            
pushg 0
pushi 0
sup
jz EndOfWhile2
pushg 0
pushi 1
equal
jz ELSE3
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ELSE4
pushg 2
writei
jump ENDIFELSE4
	ELSE4:
pushg 1
writei
ENDIFELSE4:     
jump ENDIFELSE3
	ELSE3:
read
atoi
storeg 2

pushg 2
pushg 1
inf
jz ENDSimpleIF5
pushg 2
storeg 1

ENDSimpleIF5:       
ENDIFELSE3:     
pushg 0
pushi 1
sub
storeg 0

jump While2
EndOfWhile2:         
jump ENDIFELSE1
	ELSE1:
pushg 0
pushi 1
equal
jz ENDSimpleIF6
read
atoi
storeg 2

pushg 2
writei
ENDSimpleIF6:       
ENDIFELSE1:     
stopstartread
atoi
read
atoi
read
atoi
read
atoi
pushg 0
pushg 1
equal
pushg 0
pushg 2
equal
mul
pushg 0
pushg 3
equal
mul
jz ELSE1
pushs "TRUE" 
writes
jump ENDIFELSE1
	ELSE1:
pushs "FALSE" 
writes
ENDIFELSE1:     
stoppushi 10
pushi 0
pushi 1
startWhile1:            
pushg 0
pushi 0
sup
jz EndOfWhile1
read
atoi
storeg 1

pushg 2
pushg 1
mul
storeg 2

pushg 0
pushi 1
sub
storeg 0

jump While1
EndOfWhile1:         
pushg 2
writei
stoppushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:"
writes
writei
pushs "debug :FIM"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
pushi 0
pushi 1
pushi 8
startpushs "INICIO"
writes
While1:            
pushg 2
pushg 3
equal
NOT
jz EndOfWhile1
pushg 2
pushi 2
mod
storeg 1

pushg 1
pushi 0
equal
NOT
jz ENDSimpleIF2
pushg 0
pushi 1
add
storeg 0

pushg 2
writei
ENDSimpleIF2:       
pushg 2
pushi 1
add
storeg 2

jump While1
EndOfWhile1:         
pushs "FIM"
writes
stoppushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:"
writes
writei
pushs "debug :FIM"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:"
writes
writei
pushs "debug :FIM"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:"
writes
writei
pushs "debug :FIM"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:"
writes
writei
pushs "debug :FIM"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:
"
writes
writei
pushs "debug :FIM
"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop\npushs "a funcao devolveu:
"
writes
writei
pushs "debug :FIM\n"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "a funcao devolveu:\n"
writes
writei
pushs "debug :FIM\n"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
pushi 0
startpushi 1
pusha FpotenciaF
call
nop
pushs "\na funcao devolveu:\n"
writes
writei
pushs "\ndebug :FIM\n"
writes
stop	FpotenciaF: nop
read
atoi
read
atoi
pushg 3
pushi 0
equal
jz ENDSimpleIF2
ENDSimpleIF2:       
	For3:
pushg 0
pushg 3
inf
jz EndOfFor3
pushg 1
pushg 2
mul
storeg 1

pushg 0
pushi 1
add
storeg 0

jump For3
	EndOfFor3:
pushg 1
storel -1

return
