
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ARRAYID ARRAYNUM BIGEQUAL CALL COMMENT DEFINE DO ELSE EQUALS FALSE FOR FUNC ID IF IFELSE INT INTR LESSEREQUAL NOTEQUALS NUM OR PAL RETURN STDIN STDOUT STRUCTARRAY TRUE WHILEPrograma : BlocosCodigoBlocosCodigo  :  Codigo BlocosCodigo  :  BlocosCodigo Codigo Codigo  :  Declaracao Declaracao :  INT ID ';' Declaracao :  INT ID '=' Expressao ';'Declaracao :  INTR ID '=' Expressao ';'Declaracao :  INT BlocoLerSTDIN Codigo  : Atribuicao   Atribuicao : ID '=' Expressao ';'  Atribuicao : ID '=' Bloco_CALLFUNC  Expressao : Var  Var : NUM  Var : ID  Var : TRUE  Var : FALSE  Expressao : Expressao Operador Var  Expressao : '(' Expressao  ')'  Operador : '+'  Operador : '-'  Operador : '*'  Operador : '/'  Operador : '%' Codigo  : BlocoIF BlocoIF : IF '(' ListaCondicionais ')' '{' BlocosCodigo '}'  BlocoIF : IFELSE '(' ListaCondicionais ')' '{' BlocosCodigo '}' ELSE '{' BlocosCodigo '}' ListaCondicionais : Condicional ListaCondicionais : '(' ListaCondicionais ')' ListaCondicionais : '!' '(' ListaCondicionais ')' ListaCondicionais : ListaCondicionais OperadorLogico CondicionalOperadorLogico : ANDOperadorLogico : ORCondicional : VarCondicional : '!' '(' Condicional ')'Condicional : '(' Condicional ')'Condicional : Condicional OperadorCondicional CondicionalOperadorCondicional : '>'OperadorCondicional : BIGEQUAL OperadorCondicional : '<'OperadorCondicional : LESSEREQUALOperadorCondicional : EQUALSOperadorCondicional : NOTEQUALSCodigo  : BlocoWhileDo BlocoWhileDo : WHILE  '(' ListaCondicionais ')' DO '{' BlocosCodigo '}'  Codigo  : BlocoLerSTDIN BlocoLerSTDIN : ID '=' STDIN '(' ')' ';'  BlocoLerSTDIN : STRUCTARRAY ID ID '=' STDIN '(' ')' ';' Codigo  : Bloco_EscreverSTDOUT Bloco_EscreverSTDOUT : STDOUT '(' Var ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' PAL ')' ';'  Bloco_EscreverSTDOUT : STDOUT '(' STRUCTARRAY ID ID ')' ';' Codigo  : Bloco_Comentario Bloco_Comentario : COMMENT Codigo  : Bloco_Return Bloco_Return : RETURN ID ';'  Bloco_Return : RETURN NUM ';' Codigo  : Bloco_DEFINEFUNC Bloco_DEFINEFUNC : DEFINE FUNC '(' ')' '{' BlocosCodigo '}' Bloco_DEFINEFUNC : DEFINE FUNC '(' ListaAtributos  ')' '{' BlocosCodigo '}' ListaAtributos : Atributo ListaAtributos : ListaAtributos ',' Atributo Atributo : INTCodigo  : Bloco_CALLFUNC Bloco_CALLFUNC : CALL FUNC '(' ')' ';' Bloco_CALLFUNC :  ID '=' CALL FUNC '(' ';' ')' ';' Bloco_CALLFUNC : CALL FUNC '(' INPUTVar  ')' ';'  INPUTVar : Var  INPUTVar : INPUTVar ',' Var Codigo  :  Array Array  :  ARRAYNUM NUM ID ';' Array  :  ARRAYID ID ID ';' Codigo  : BlocoFOR BlocoFOR : FOR ID  '(' Condicional ')'  Atribuicao  '{' BlocosCodigo '}'  "
    
_lr_action_items = {'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,75,82,120,121,125,131,134,139,142,143,145,147,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[16,16,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,116,-10,-70,-71,-6,-7,16,16,-49,-50,16,116,-64,-46,16,16,16,16,16,-66,-25,16,-51,-58,16,16,-65,-44,-47,-59,16,16,-73,16,-26,]),'INTR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[18,18,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,18,18,-49,-50,18,-64,-46,18,18,18,18,18,-66,-25,18,-51,-58,18,18,-65,-44,-47,-59,18,18,-73,18,-26,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,22,24,25,29,30,31,33,34,36,37,38,39,40,45,46,48,49,52,54,60,61,72,73,74,76,79,82,83,84,85,86,87,88,96,97,98,99,100,101,102,103,104,105,106,112,120,121,122,125,130,131,134,139,142,143,145,148,150,152,153,155,157,160,161,164,165,167,174,176,178,179,180,181,182,183,185,186,187,188,189,190,191,192,],[17,17,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,32,35,39,-53,41,46,47,-3,-8,50,66,66,66,69,66,77,78,-5,66,-11,66,66,66,112,-55,-56,66,66,-10,66,-19,-20,-21,-22,-23,66,-31,-32,66,-37,-38,-39,-40,-41,-42,66,144,-70,-71,66,-6,66,-7,17,17,-49,-50,17,-64,66,169,66,-46,17,17,17,17,17,-66,-25,17,-51,-58,17,50,17,-65,-44,-47,-59,17,17,-73,17,-26,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[19,19,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,19,19,-49,-50,19,-64,-46,19,19,19,19,19,-66,-25,19,-51,-58,19,19,-65,-44,-47,-59,19,19,-73,19,-26,]),'IFELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[20,20,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,20,20,-49,-50,20,-64,-46,20,20,20,20,20,-66,-25,20,-51,-58,20,20,-65,-44,-47,-59,20,20,-73,20,-26,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[21,21,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,21,21,-49,-50,21,-64,-46,21,21,21,21,21,-66,-25,21,-51,-58,21,21,-65,-44,-47,-59,21,21,-73,21,-26,]),'STRUCTARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,24,31,33,40,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[22,22,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,22,-53,-3,-8,72,-5,-11,-55,-56,-10,-70,-71,-6,-7,22,22,-49,-50,22,-64,-46,22,22,22,22,22,-66,-25,22,-51,-58,22,22,-65,-44,-47,-59,22,22,-73,22,-26,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[23,23,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,23,23,-49,-50,23,-64,-46,23,23,23,23,23,-66,-25,23,-51,-58,23,23,-65,-44,-47,-59,23,23,-73,23,-26,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[24,24,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,24,24,-49,-50,24,-64,-46,24,24,24,24,24,-66,-25,24,-51,-58,24,24,-65,-44,-47,-59,24,24,-73,24,-26,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[25,25,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,25,25,-49,-50,25,-64,-46,25,25,25,25,25,-66,-25,25,-51,-58,25,25,-65,-44,-47,-59,25,25,-73,25,-26,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[26,26,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,26,26,-49,-50,26,-64,-46,26,26,26,26,26,-66,-25,26,-51,-58,26,26,-65,-44,-47,-59,26,26,-73,26,-26,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,34,48,52,73,74,81,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,181,182,183,185,186,187,188,189,190,191,192,],[27,27,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,55,-5,-11,-55,-56,126,-10,-70,-71,-6,-7,27,27,-49,-50,27,-64,-46,27,27,27,27,27,-66,-25,27,-51,-58,27,27,27,-65,-44,-47,-59,27,27,-73,27,-26,]),'ARRAYNUM':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[28,28,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,28,28,-49,-50,28,-64,-46,28,28,28,28,28,-66,-25,28,-51,-58,28,28,-65,-44,-47,-59,28,28,-73,28,-26,]),'ARRAYID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[29,29,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,29,29,-49,-50,29,-64,-46,29,29,29,29,29,-66,-25,29,-51,-58,29,29,-65,-44,-47,-59,29,29,-73,29,-26,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,134,139,142,143,145,148,155,157,160,161,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,192,],[30,30,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,30,30,-49,-50,30,-64,-46,30,30,30,30,30,-66,-25,30,-51,-58,30,30,-65,-44,-47,-59,30,30,-73,30,-26,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,142,143,148,155,167,174,178,179,183,185,186,187,190,192,],[0,-1,-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,-49,-50,-64,-46,-66,-25,-51,-58,-65,-44,-47,-59,-73,-26,]),'}':([3,4,5,6,7,8,9,10,11,12,13,14,15,24,31,33,48,52,73,74,82,120,121,125,131,142,143,148,155,157,160,164,167,174,176,178,179,180,183,185,186,187,188,190,191,192,],[-2,-4,-9,-24,-43,-45,-48,-52,-54,-57,-63,-69,-72,-53,-3,-8,-5,-11,-55,-56,-10,-70,-71,-6,-7,-49,-50,-64,-46,174,175,179,-66,-25,185,-51,-58,187,-65,-44,-47,-59,190,-73,192,-26,]),'=':([17,32,35,50,69,169,],[34,49,60,81,109,181,]),'(':([19,20,21,23,34,36,37,38,43,44,47,49,53,54,60,61,64,79,91,96,97,98,99,100,101,102,103,104,105,106,122,124,141,153,154,181,],[36,37,38,40,54,61,61,61,75,76,79,54,89,54,54,61,106,122,130,122,-31,-32,122,-37,-38,-39,-40,-41,-42,61,122,153,162,122,172,54,]),'NUM':([25,28,34,36,37,38,40,49,54,60,61,76,79,83,84,85,86,87,88,96,97,98,99,100,101,102,103,104,105,106,122,130,150,153,181,],[42,45,57,57,57,57,57,57,57,57,57,57,57,57,-19,-20,-21,-22,-23,57,-31,-32,57,-37,-38,-39,-40,-41,-42,57,57,57,57,57,57,]),'FUNC':([26,27,55,126,],[43,44,91,154,]),';':([32,41,42,50,51,56,57,58,59,66,77,78,80,92,110,111,117,127,128,129,130,149,163,172,173,177,],[48,73,74,-14,82,-12,-13,-15,-16,-14,120,121,125,131,142,143,148,-17,155,-18,156,167,178,156,183,186,]),'STDIN':([34,49,109,],[53,53,141,]),'TRUE':([34,36,37,38,40,49,54,60,61,76,79,83,84,85,86,87,88,96,97,98,99,100,101,102,103,104,105,106,122,130,150,153,181,],[58,58,58,58,58,58,58,58,58,58,58,58,-19,-20,-21,-22,-23,58,-31,-32,58,-37,-38,-39,-40,-41,-42,58,58,58,58,58,58,]),'FALSE':([34,36,37,38,40,49,54,60,61,76,79,83,84,85,86,87,88,96,97,98,99,100,101,102,103,104,105,106,122,130,150,153,181,],[59,59,59,59,59,59,59,59,59,59,59,59,-19,-20,-21,-22,-23,59,-31,-32,59,-37,-38,-39,-40,-41,-42,59,59,59,59,59,59,]),'!':([36,37,38,61,79,96,97,98,99,100,101,102,103,104,105,106,122,153,],[64,64,64,64,124,124,-31,-32,124,-37,-38,-39,-40,-41,-42,64,124,124,]),'PAL':([40,],[71,]),'+':([50,51,56,57,58,59,66,80,90,92,127,129,],[-14,84,-12,-13,-15,-16,-14,84,84,84,-17,-18,]),'-':([50,51,56,57,58,59,66,80,90,92,127,129,],[-14,85,-12,-13,-15,-16,-14,85,85,85,-17,-18,]),'*':([50,51,56,57,58,59,66,80,90,92,127,129,],[-14,86,-12,-13,-15,-16,-14,86,86,86,-17,-18,]),'/':([50,51,56,57,58,59,66,80,90,92,127,129,],[-14,87,-12,-13,-15,-16,-14,87,87,87,-17,-18,]),'%':([50,51,56,57,58,59,66,80,90,92,127,129,],[-14,88,-12,-13,-15,-16,-14,88,88,88,-17,-18,]),'{':([52,82,95,107,113,140,146,148,167,170,183,184,],[-11,-10,134,139,145,161,165,-64,-66,182,-65,189,]),')':([56,57,58,59,62,63,65,66,67,68,70,71,75,76,89,90,93,94,114,115,116,118,119,123,127,129,130,132,133,135,136,137,138,144,151,156,158,159,162,166,168,171,],[-12,-13,-15,-16,95,-27,-33,-14,107,108,110,111,113,117,128,129,132,133,146,-60,-62,149,-67,152,-17,-18,117,-28,-35,-30,-36,158,159,163,133,173,-29,-34,177,-61,-68,159,]),'>':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,100,-33,-14,100,100,-35,100,100,100,100,-34,100,]),'BIGEQUAL':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,101,-33,-14,101,101,-35,101,101,101,101,-34,101,]),'<':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,102,-33,-14,102,102,-35,102,102,102,102,-34,102,]),'LESSEREQUAL':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,103,-33,-14,103,103,-35,103,103,103,103,-34,103,]),'EQUALS':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,104,-33,-14,104,104,-35,104,104,104,104,-34,104,]),'NOTEQUALS':([57,58,59,63,65,66,94,123,133,135,136,138,151,159,171,],[-13,-15,-16,105,-33,-14,105,105,-35,105,105,105,105,-34,105,]),'AND':([57,58,59,62,63,65,66,67,68,93,94,132,133,135,136,137,138,158,159,],[-13,-15,-16,97,-27,-33,-14,97,97,97,-27,-28,-35,-30,-36,97,-27,-29,-34,]),'OR':([57,58,59,62,63,65,66,67,68,93,94,132,133,135,136,137,138,158,159,],[-13,-15,-16,98,-27,-33,-14,98,98,98,-27,-28,-35,-30,-36,98,-27,-29,-34,]),',':([57,58,59,66,114,115,116,118,119,166,168,],[-13,-15,-16,-14,147,-60,-62,150,-67,-61,-68,]),'DO':([108,],[140,]),'ELSE':([175,],[184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'BlocosCodigo':([0,134,139,145,161,165,182,189,],[2,157,160,164,176,180,188,191,]),'Codigo':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[3,31,3,3,3,31,31,3,31,3,31,31,3,31,3,31,]),'Declaracao':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'Atribuicao':([0,2,134,139,145,152,157,160,161,164,165,176,180,182,188,189,191,],[5,5,5,5,5,170,5,5,5,5,5,5,5,5,5,5,5,]),'BlocoIF':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'BlocoWhileDo':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BlocoLerSTDIN':([0,2,16,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[8,8,33,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'Bloco_EscreverSTDOUT':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'Bloco_Comentario':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'Bloco_Return':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'Bloco_DEFINEFUNC':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'Bloco_CALLFUNC':([0,2,34,134,139,145,157,160,161,164,165,176,180,181,182,188,189,191,],[13,13,52,13,13,13,13,13,13,13,13,13,13,52,13,13,13,13,]),'Array':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'BlocoFOR':([0,2,134,139,145,157,160,161,164,165,176,180,182,188,189,191,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'Expressao':([34,49,54,60,181,],[51,80,90,92,51,]),'Var':([34,36,37,38,40,49,54,60,61,76,79,83,96,99,106,122,130,150,153,181,],[56,65,65,65,70,56,56,56,65,119,65,127,65,65,65,65,119,168,65,56,]),'ListaCondicionais':([36,37,38,61,106,],[62,67,68,93,137,]),'Condicional':([36,37,38,61,79,96,99,106,122,153,],[63,63,63,94,123,135,136,138,151,171,]),'Operador':([51,80,90,92,],[83,83,83,83,]),'OperadorLogico':([62,67,68,93,137,],[96,96,96,96,96,]),'OperadorCondicional':([63,94,123,135,136,138,151,171,],[99,99,99,99,99,99,99,99,]),'ListaAtributos':([75,],[114,]),'Atributo':([75,147,],[115,166,]),'INPUTVar':([76,130,],[118,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> BlocosCodigo','Programa',1,'p_Programa','PLTP2-YaccCompiler.py',24),
  ('BlocosCodigo -> Codigo','BlocosCodigo',1,'p_BlocoCodigo_fin','PLTP2-YaccCompiler.py',32),
  ('BlocosCodigo -> BlocosCodigo Codigo','BlocosCodigo',2,'p_BlocosCodigo_Rec','PLTP2-YaccCompiler.py',37),
  ('Codigo -> Declaracao','Codigo',1,'p_Codigo_Declaracao','PLTP2-YaccCompiler.py',46),
  ('Declaracao -> INT ID ;','Declaracao',3,'p_Declaracao','PLTP2-YaccCompiler.py',51),
  ('Declaracao -> INT ID = Expressao ;','Declaracao',5,'p_Declaracao_Atribuicao','PLTP2-YaccCompiler.py',57),
  ('Declaracao -> INTR ID = Expressao ;','Declaracao',5,'p_Declaracao_AtribuicaoR','PLTP2-YaccCompiler.py',63),
  ('Declaracao -> INT BlocoLerSTDIN','Declaracao',2,'p_Declaracao_STDIN','PLTP2-YaccCompiler.py',69),
  ('Codigo -> Atribuicao','Codigo',1,'p_Codigo_Atribuicao','PLTP2-YaccCompiler.py',77),
  ('Atribuicao -> ID = Expressao ;','Atribuicao',4,'p_Atribuicao','PLTP2-YaccCompiler.py',82),
  ('Atribuicao -> ID = Bloco_CALLFUNC','Atribuicao',3,'p_Atribuicao_FUNC','PLTP2-YaccCompiler.py',90),
  ('Expressao -> Var','Expressao',1,'p_Expressao_fin','PLTP2-YaccCompiler.py',100),
  ('Var -> NUM','Var',1,'p_Var_NUM','PLTP2-YaccCompiler.py',105),
  ('Var -> ID','Var',1,'p_Var_ID','PLTP2-YaccCompiler.py',111),
  ('Var -> TRUE','Var',1,'p_Var_TRUE','PLTP2-YaccCompiler.py',116),
  ('Var -> FALSE','Var',1,'p_Var_FALSE','PLTP2-YaccCompiler.py',121),
  ('Expressao -> Expressao Operador Var','Expressao',3,'p_Expressao_Rec1','PLTP2-YaccCompiler.py',129),
  ('Expressao -> ( Expressao )','Expressao',3,'p_Expressao_Rec2','PLTP2-YaccCompiler.py',134),
  ('Operador -> +','Operador',1,'p_Operador_MAIS','PLTP2-YaccCompiler.py',141),
  ('Operador -> -','Operador',1,'p_Operador_Minus','PLTP2-YaccCompiler.py',145),
  ('Operador -> *','Operador',1,'p_Operador_MUL','PLTP2-YaccCompiler.py',148),
  ('Operador -> /','Operador',1,'p_Operador_Div','PLTP2-YaccCompiler.py',151),
  ('Operador -> %','Operador',1,'p_Operador_Rest','PLTP2-YaccCompiler.py',154),
  ('Codigo -> BlocoIF','Codigo',1,'p_Codigo_BlocoIF','PLTP2-YaccCompiler.py',162),
  ('BlocoIF -> IF ( ListaCondicionais ) { BlocosCodigo }','BlocoIF',7,'p_BlocoIF','PLTP2-YaccCompiler.py',169),
  ('BlocoIF -> IFELSE ( ListaCondicionais ) { BlocosCodigo } ELSE { BlocosCodigo }','BlocoIF',11,'p_BlocoIF_ELSE','PLTP2-YaccCompiler.py',174),
  ('ListaCondicionais -> Condicional','ListaCondicionais',1,'p_ListaCondicionais_fin','PLTP2-YaccCompiler.py',180),
  ('ListaCondicionais -> ( ListaCondicionais )','ListaCondicionais',3,'p_ListaCondicionais_Capsulado','PLTP2-YaccCompiler.py',185),
  ('ListaCondicionais -> ! ( ListaCondicionais )','ListaCondicionais',4,'p_ListaCondicionais_Neg','PLTP2-YaccCompiler.py',190),
  ('ListaCondicionais -> ListaCondicionais OperadorLogico Condicional','ListaCondicionais',3,'p_ListaCondicionais_Rec','PLTP2-YaccCompiler.py',195),
  ('OperadorLogico -> AND','OperadorLogico',1,'p_OperadorLogico_AND','PLTP2-YaccCompiler.py',204),
  ('OperadorLogico -> OR','OperadorLogico',1,'p_OperadorLogico_OR','PLTP2-YaccCompiler.py',209),
  ('Condicional -> Var','Condicional',1,'p_Condicional_Var','PLTP2-YaccCompiler.py',217),
  ('Condicional -> ! ( Condicional )','Condicional',4,'p_Condicional_Neg','PLTP2-YaccCompiler.py',221),
  ('Condicional -> ( Condicional )','Condicional',3,'p_Condicional_Capsulado','PLTP2-YaccCompiler.py',227),
  ('Condicional -> Condicional OperadorCondicional Condicional','Condicional',3,'p_Condicional_OperadorCondicional','PLTP2-YaccCompiler.py',231),
  ('OperadorCondicional -> >','OperadorCondicional',1,'p_OperadorCondicional_Maior','PLTP2-YaccCompiler.py',240),
  ('OperadorCondicional -> BIGEQUAL','OperadorCondicional',1,'p_OperadorCondicional_BIGEQUAL','PLTP2-YaccCompiler.py',244),
  ('OperadorCondicional -> <','OperadorCondicional',1,'p_OperadorCondicional_MENOR','PLTP2-YaccCompiler.py',248),
  ('OperadorCondicional -> LESSEREQUAL','OperadorCondicional',1,'p_OperadorCondicional_LESSEREQUAL','PLTP2-YaccCompiler.py',252),
  ('OperadorCondicional -> EQUALS','OperadorCondicional',1,'p_OperadorCondicional_EQUALS','PLTP2-YaccCompiler.py',256),
  ('OperadorCondicional -> NOTEQUALS','OperadorCondicional',1,'p_OperadorCondicional_NOTEQUALS','PLTP2-YaccCompiler.py',261),
  ('Codigo -> BlocoWhileDo','Codigo',1,'p_Codigo_BlocoWhileDo','PLTP2-YaccCompiler.py',268),
  ('BlocoWhileDo -> WHILE ( ListaCondicionais ) DO { BlocosCodigo }','BlocoWhileDo',8,'p_BlocoWhileDo','PLTP2-YaccCompiler.py',273),
  ('Codigo -> BlocoLerSTDIN','Codigo',1,'p_Codigo_LerSTDIN','PLTP2-YaccCompiler.py',279),
  ('BlocoLerSTDIN -> ID = STDIN ( ) ;','BlocoLerSTDIN',6,'p_BlocoLerSTDIN','PLTP2-YaccCompiler.py',284),
  ('BlocoLerSTDIN -> STRUCTARRAY ID ID = STDIN ( ) ;','BlocoLerSTDIN',8,'p_BlocoLerSTDIN_STRUCTARRAY','PLTP2-YaccCompiler.py',290),
  ('Codigo -> Bloco_EscreverSTDOUT','Codigo',1,'p_Codigo_EscreverSTDOUT','PLTP2-YaccCompiler.py',296),
  ('Bloco_EscreverSTDOUT -> STDOUT ( Var ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT','PLTP2-YaccCompiler.py',300),
  ('Bloco_EscreverSTDOUT -> STDOUT ( PAL ) ;','Bloco_EscreverSTDOUT',5,'p_Bloco_EscreverSTDOUT_PAL','PLTP2-YaccCompiler.py',307),
  ('Bloco_EscreverSTDOUT -> STDOUT ( STRUCTARRAY ID ID ) ;','Bloco_EscreverSTDOUT',7,'p_Bloco_EscreverSTDOUT_STRUCTARRAY','PLTP2-YaccCompiler.py',314),
  ('Codigo -> Bloco_Comentario','Codigo',1,'p_Codigo_Comentario','PLTP2-YaccCompiler.py',322),
  ('Bloco_Comentario -> COMMENT','Bloco_Comentario',1,'p_Bloco_Comentario','PLTP2-YaccCompiler.py',327),
  ('Codigo -> Bloco_Return','Codigo',1,'p_Codigo_Return','PLTP2-YaccCompiler.py',344),
  ('Bloco_Return -> RETURN ID ;','Bloco_Return',3,'p_Bloco_ReturnID','PLTP2-YaccCompiler.py',349),
  ('Bloco_Return -> RETURN NUM ;','Bloco_Return',3,'p_Bloco_ReturnNUM','PLTP2-YaccCompiler.py',355),
  ('Codigo -> Bloco_DEFINEFUNC','Codigo',1,'p_Codigo_DEFINEFUNC','PLTP2-YaccCompiler.py',362),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ) { BlocosCodigo }','Bloco_DEFINEFUNC',7,'p_Bloco_DEFINEFUNC_EMPTY','PLTP2-YaccCompiler.py',367),
  ('Bloco_DEFINEFUNC -> DEFINE FUNC ( ListaAtributos ) { BlocosCodigo }','Bloco_DEFINEFUNC',8,'p_Bloco_DEFINEFUNC_Atributos','PLTP2-YaccCompiler.py',373),
  ('ListaAtributos -> Atributo','ListaAtributos',1,'p_ListaAtributos_fin','PLTP2-YaccCompiler.py',379),
  ('ListaAtributos -> ListaAtributos , Atributo','ListaAtributos',3,'p_ListaAtributos_Rec','PLTP2-YaccCompiler.py',385),
  ('Atributo -> INT','Atributo',1,'p_Atributo','PLTP2-YaccCompiler.py',392),
  ('Codigo -> Bloco_CALLFUNC','Codigo',1,'p_Codigo_CALLFUNC','PLTP2-YaccCompiler.py',400),
  ('Bloco_CALLFUNC -> CALL FUNC ( ) ;','Bloco_CALLFUNC',5,'p_Bloco_CALLFUNC_EMPTY','PLTP2-YaccCompiler.py',405),
  ('Bloco_CALLFUNC -> ID = CALL FUNC ( ; ) ;','Bloco_CALLFUNC',8,'p_Bloco_CALLFUNC_EMPTYID','PLTP2-YaccCompiler.py',410),
  ('Bloco_CALLFUNC -> CALL FUNC ( INPUTVar ) ;','Bloco_CALLFUNC',6,'p_Bloco_CALLFUNC_Atributos','PLTP2-YaccCompiler.py',417),
  ('INPUTVar -> Var','INPUTVar',1,'p_INPUTVar_fin','PLTP2-YaccCompiler.py',422),
  ('INPUTVar -> INPUTVar , Var','INPUTVar',3,'p_INPUTVar_Rec','PLTP2-YaccCompiler.py',427),
  ('Codigo -> Array','Codigo',1,'p_Codigo_ARRAY','PLTP2-YaccCompiler.py',433),
  ('Array -> ARRAYNUM NUM ID ;','Array',4,'p_Codigo_ARRAYNUM','PLTP2-YaccCompiler.py',437),
  ('Array -> ARRAYID ID ID ;','Array',4,'p_Codigo_ARRAYID','PLTP2-YaccCompiler.py',442),
  ('Codigo -> BlocoFOR','Codigo',1,'p_Codigo_BlocoFOR','PLTP2-YaccCompiler.py',448),
  ('BlocoFOR -> FOR ID ( Condicional ) Atribuicao { BlocosCodigo }','BlocoFOR',9,'p_BlocoFOR','PLTP2-YaccCompiler.py',453),
]
